{
    "docs": [
        {
            "location": "/",
            "text": "Welcome!\n\n\nThis site contains tutorials for using the\n\nMicrobial Genomics Virtual Lab\n to perform bioinformatics\ntasks on bacterial genome sequence \nusing the \nGalaxy\n system.",
            "title": "Home"
        },
        {
            "location": "/#welcome",
            "text": "This site contains tutorials for using the Microbial Genomics Virtual Lab  to perform bioinformatics\ntasks on bacterial genome sequence \nusing the  Galaxy  system.",
            "title": "Welcome!"
        },
        {
            "location": "/modules/data-dna/",
            "text": "Dataset\n\n\nImport a Galaxy history\n\n\nCopy this link:\n\n\nhttps://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/Microbial_tutorials/Galaxy_history_input_files.tar.gz\n\n\n\n\nGo to your Galaxy instance. Make sure you are registered and logged in. Refresh the page.\n\n\nClick on the \nHistory\n cog \n\n\nSelect \nImport from File\n\n\n\n\n\n\n\n\nIn the box called \nArchived History URL\n, paste in the link address to the Galaxy history (that you copied above).\n\n\nClick \nSubmit\n\n\nWait a few seconds.\n\n\nClick on the \nview all histories\n button \n\n\nSee if the Galaxy history has been imported: it will be called \nimported from archive: Data\n\n\nAbove that pane, click on the \nSwitch to\n button.\n\n\nThen click \nDone\n (in the top left corner).\n\n\nYou should now have a list of five files in your current history. We will use these for the Genomics Workshop; or see below for additional files.\n\n\n\n\n\n\nAdditional Galaxy histories\n\n\nIf you are using only part of the Genomics Workshop, you can upload any required histories listed here. Follow the instructions above.\n\n\nGalaxy history: FastQC\n\n\nhttps://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/Microbial_tutorials/FastQChistory.tar.gz\n\n\nGalaxy history: Spades\n\n\nhttps://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/Microbial_tutorials/Spadeshistory.tar.gz\n\n\nGalaxy history: Prokka\n\n\nhttps://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/Microbial_tutorials/Prokkahistory.tar.gz\n\n\nGalaxy history: Snippy\n\n\nhttps://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/Microbial_tutorials/Snippyhistory.tar.gz\n\n\nGalaxy history: Workflows\n\n\nhttps://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/Microbial_tutorials/Galaxy-History-Workflows-history.tar.gz\n\n\nAdditional files\n\n\nIf you need individual files, you can upload any of the files listed here. The instructions are listed below.\n\n\nWildtype reference\n\n\n\n\nwildtype.fna\n\n\n\n\n https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/Microbial_tutorials/wildtype.fna\n\n\n\n\nwildtype.gbk\n\n\n\n\n https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/Microbial_tutorials/wildtype.gbk\n\n\n\n\nwildtype.gff\n\n\n\n\n https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/Microbial_tutorials/wildtype.gff\n\n\nMutant Illumina sequence\n\n\n\n\nmutant_R1.fastq.gz\n\n\n\n\n https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/Microbial_tutorials/mutant_R1.fastq.gz\n\n\n\n\nmutant_R2.fastq.gz\n\n\n\n\nhttps://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/Microbial_tutorials/mutant_R2.fastq.gz\n\n\nAssembled contigs\n\n\n\n\nSPAdes_contigs.fasta\n\n\n\n\nhttps://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/Microbial_tutorials/SPAdes_contigs.fasta\n\n\nUpload to Galaxy\n\n\nThere are two ways to upload these files to Galaxy. You can either download to your local computer and upload to Galaxy, or you can tell Galaxy to directly upload the file from an external source.\n\n\nDownload and upload:\n\n\n\n\nDownload required file(s) to your computer.\n\n\nFrom the Galaxy tool panel, click on \nGet Data \u2192 Upload File\n  \n\n\nClick the \nChoose local file\n button  \n\n\nFind and select the \nfile\n you downloaded and click \nOpen\n  \n\n\nSet the \nType\n correctly.  \n\n\nClick the \nStart\n button.  \n\n\nOnce the progress bar reaches 100%, click the \nClose\n button  \n\n\nThe file will now upload to your current history.\n\n\n\n\nOr, tell Galaxy to find the file from an external source:\n\n\n\n\nFrom the Galaxy tool panel, click on \nGet Data \u2192 Upload File\n  \n\n\nClick the \nPaste/Fetch data\n button  \n\n\nPaste the URL into the box.\n\n\nClick the \nStart\n button.  \n\n\nOnce the progress bar reaches 100%, click the \nClose\n button  \n\n\nThe file will now upload to your current history.",
            "title": "Training data set"
        },
        {
            "location": "/modules/data-dna/#dataset",
            "text": "",
            "title": "Dataset"
        },
        {
            "location": "/modules/data-dna/#import-a-galaxy-history",
            "text": "Copy this link:  https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/Microbial_tutorials/Galaxy_history_input_files.tar.gz   Go to your Galaxy instance. Make sure you are registered and logged in. Refresh the page.  Click on the  History  cog   Select  Import from File     In the box called  Archived History URL , paste in the link address to the Galaxy history (that you copied above).  Click  Submit  Wait a few seconds.  Click on the  view all histories  button   See if the Galaxy history has been imported: it will be called  imported from archive: Data  Above that pane, click on the  Switch to  button.  Then click  Done  (in the top left corner).  You should now have a list of five files in your current history. We will use these for the Genomics Workshop; or see below for additional files.",
            "title": "Import a Galaxy history"
        },
        {
            "location": "/modules/data-dna/#additional-galaxy-histories",
            "text": "If you are using only part of the Genomics Workshop, you can upload any required histories listed here. Follow the instructions above.",
            "title": "Additional Galaxy histories"
        },
        {
            "location": "/modules/data-dna/#galaxy-history-fastqc",
            "text": "https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/Microbial_tutorials/FastQChistory.tar.gz",
            "title": "Galaxy history: FastQC"
        },
        {
            "location": "/modules/data-dna/#galaxy-history-spades",
            "text": "https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/Microbial_tutorials/Spadeshistory.tar.gz",
            "title": "Galaxy history: Spades"
        },
        {
            "location": "/modules/data-dna/#galaxy-history-prokka",
            "text": "https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/Microbial_tutorials/Prokkahistory.tar.gz",
            "title": "Galaxy history: Prokka"
        },
        {
            "location": "/modules/data-dna/#galaxy-history-snippy",
            "text": "https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/Microbial_tutorials/Snippyhistory.tar.gz",
            "title": "Galaxy history: Snippy"
        },
        {
            "location": "/modules/data-dna/#galaxy-history-workflows",
            "text": "https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/Microbial_tutorials/Galaxy-History-Workflows-history.tar.gz",
            "title": "Galaxy history: Workflows"
        },
        {
            "location": "/modules/data-dna/#additional-files",
            "text": "If you need individual files, you can upload any of the files listed here. The instructions are listed below.",
            "title": "Additional files"
        },
        {
            "location": "/modules/data-dna/#wildtype-reference",
            "text": "wildtype.fna    https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/Microbial_tutorials/wildtype.fna   wildtype.gbk    https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/Microbial_tutorials/wildtype.gbk   wildtype.gff    https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/Microbial_tutorials/wildtype.gff",
            "title": "Wildtype reference"
        },
        {
            "location": "/modules/data-dna/#mutant-illumina-sequence",
            "text": "mutant_R1.fastq.gz    https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/Microbial_tutorials/mutant_R1.fastq.gz   mutant_R2.fastq.gz   https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/Microbial_tutorials/mutant_R2.fastq.gz",
            "title": "Mutant Illumina sequence"
        },
        {
            "location": "/modules/data-dna/#assembled-contigs",
            "text": "SPAdes_contigs.fasta   https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/Microbial_tutorials/SPAdes_contigs.fasta",
            "title": "Assembled contigs"
        },
        {
            "location": "/modules/data-dna/#upload-to-galaxy",
            "text": "There are two ways to upload these files to Galaxy. You can either download to your local computer and upload to Galaxy, or you can tell Galaxy to directly upload the file from an external source.  Download and upload:   Download required file(s) to your computer.  From the Galaxy tool panel, click on  Get Data \u2192 Upload File     Click the  Choose local file  button    Find and select the  file  you downloaded and click  Open     Set the  Type  correctly.    Click the  Start  button.    Once the progress bar reaches 100%, click the  Close  button    The file will now upload to your current history.   Or, tell Galaxy to find the file from an external source:   From the Galaxy tool panel, click on  Get Data \u2192 Upload File     Click the  Paste/Fetch data  button    Paste the URL into the box.  Click the  Start  button.    Once the progress bar reaches 100%, click the  Close  button    The file will now upload to your current history.",
            "title": "Upload to Galaxy"
        },
        {
            "location": "/modules/fastqc/",
            "text": "FastQC in Galaxy\n\n\n\n\n\nAfter sequencing, the reads should be checked for their quality. This tutorial demonstrates how to use the tool called FastQC to examine bacterial paired-end Illumina sequence reads. The FastQC website is \nhere.\n\n\nLearning Objectives\n\n\nAt the end of this tutorial you should be able to:\n\n\n\n\nrun FastQC on input sequence reads, and\n\n\nexamine the FastQC output.\n\n\n\n\nInput files\n\n\nSee \nhere\n for information about how to start with Galaxy, and \nhere\n for the link to import the \u201cGalaxy history of input files\u201d for this tutorial, if you don\u2019t already have them in your history.\n\n\n\n\nWe will use the paired-end read set from our Galaxy history.\n\n\nThese are the files \nmutant_R1.fastq\n and \nmutant_R2.fastq\n.\n\n\nFASTQ is a file format for sequence reads that displays quality scores for each of the sequenced nucleotides. For more information about FASTQ format see this \nlink\n.\n\n\nWe will evaluate the \nmutant_R1.fastq\n reads using the FastQC tool.\n\n\n\n\nRun FastQC\n\n\n\n\nGo to \nTools \u2192 NGS Analysis \u2192 NGS: QC and Manipulation \u2192 FastQC\n\n\n\n\n\n\n\n\nfor \nShort read data from your current history\n: \nmutant_R1.fastq\n\n\nClick \nExecute\n\n\nIn the History pane, click on the \u201crefresh\u201d icon to see if the analysis has finished.\n\n\n\n\nExamine output files\n\n\nOnce finished, examine the output called \nFastQC on data1:webpage\n (Hint: click the eye icon). It has a summary at the top of the page and a number of graphs.\n\n\nLook at:\n\n\n\n\n\n\nBasic Statistics\n\n\n\n\nSequence length\n: will be important in setting maximum k-mer size value for assembly.\n\n\nEncoding\n: The quality encoding type is important for quality trimming software.\n\n\n% GC\n: high GC organisms don\u2019t tend to assemble well and may have an uneven read coverage distribution.\n\n\nTotal sequences\n: Total number of reads: gives you an idea of coverage.\n\n\n\n\n\n\n\n\nPer base sequence quality\n: Dips in quality near the beginning, middle or end of the reads: determines possible trimming/cleanup methods and parameters and may indicate technical problems with the sequencing process/machine run. In this case, all the reads are of relatively high quality across their length (150 bp).\n\n\n\n\n\n\n\n\n\n\n\n\nPer base N content\n: Presence of large numbers of Ns in reads may point to a poor quality sequencing run. You would need to trim these reads to remove Ns.\n\n\n\n\n\n\nKmer content\n: Presence of highly recurring k-mers: may point to contamination of reads with barcodes, adapter sequences etc. In this case, we have spikes in two types of kmers. \n\n\n\n\n\n\n\n\nWe have warnings for two outputs (per base sequence content; Kmer content). This would warrant more investigation.\n\n\nGeneral questions you might ask about your input reads include:\n\n\n\n\nHow good is my read set?\n\n\nDo I need to ask for a new sequencing run?  \n\n\nIs it suitable for the analysis I need to do?\n\n\n\n\nFor a fuller discussion of FastQC outputs and warnings, see the \nFastQC website link\n, including the section on each of the output \nreports\n, and examples of \n\u201cgood\u201d\n and \n\u201cbad\u201d\n Illumina data.\n\n\nWhat Next?\n\n\nAssemble the reads into a draft genome sequence\n.",
            "title": "Quality control"
        },
        {
            "location": "/modules/fastqc/#fastqc-in-galaxy",
            "text": "After sequencing, the reads should be checked for their quality. This tutorial demonstrates how to use the tool called FastQC to examine bacterial paired-end Illumina sequence reads. The FastQC website is  here.",
            "title": "FastQC in Galaxy"
        },
        {
            "location": "/modules/fastqc/#learning-objectives",
            "text": "At the end of this tutorial you should be able to:   run FastQC on input sequence reads, and  examine the FastQC output.",
            "title": "Learning Objectives"
        },
        {
            "location": "/modules/fastqc/#input-files",
            "text": "See  here  for information about how to start with Galaxy, and  here  for the link to import the \u201cGalaxy history of input files\u201d for this tutorial, if you don\u2019t already have them in your history.   We will use the paired-end read set from our Galaxy history.  These are the files  mutant_R1.fastq  and  mutant_R2.fastq .  FASTQ is a file format for sequence reads that displays quality scores for each of the sequenced nucleotides. For more information about FASTQ format see this  link .  We will evaluate the  mutant_R1.fastq  reads using the FastQC tool.",
            "title": "Input files"
        },
        {
            "location": "/modules/fastqc/#run-fastqc",
            "text": "Go to  Tools \u2192 NGS Analysis \u2192 NGS: QC and Manipulation \u2192 FastQC     for  Short read data from your current history :  mutant_R1.fastq  Click  Execute  In the History pane, click on the \u201crefresh\u201d icon to see if the analysis has finished.",
            "title": "Run FastQC"
        },
        {
            "location": "/modules/fastqc/#examine-output-files",
            "text": "Once finished, examine the output called  FastQC on data1:webpage  (Hint: click the eye icon). It has a summary at the top of the page and a number of graphs.  Look at:    Basic Statistics   Sequence length : will be important in setting maximum k-mer size value for assembly.  Encoding : The quality encoding type is important for quality trimming software.  % GC : high GC organisms don\u2019t tend to assemble well and may have an uneven read coverage distribution.  Total sequences : Total number of reads: gives you an idea of coverage.     Per base sequence quality : Dips in quality near the beginning, middle or end of the reads: determines possible trimming/cleanup methods and parameters and may indicate technical problems with the sequencing process/machine run. In this case, all the reads are of relatively high quality across their length (150 bp).       Per base N content : Presence of large numbers of Ns in reads may point to a poor quality sequencing run. You would need to trim these reads to remove Ns.    Kmer content : Presence of highly recurring k-mers: may point to contamination of reads with barcodes, adapter sequences etc. In this case, we have spikes in two types of kmers.      We have warnings for two outputs (per base sequence content; Kmer content). This would warrant more investigation.  General questions you might ask about your input reads include:   How good is my read set?  Do I need to ask for a new sequencing run?    Is it suitable for the analysis I need to do?   For a fuller discussion of FastQC outputs and warnings, see the  FastQC website link , including the section on each of the output  reports , and examples of  \u201cgood\u201d  and  \u201cbad\u201d  Illumina data.",
            "title": "Examine output files"
        },
        {
            "location": "/modules/fastqc/#what-next",
            "text": "Assemble the reads into a draft genome sequence .",
            "title": "What Next?"
        },
        {
            "location": "/modules/spades/",
            "text": "Assembly using Spades\n\n\nKeywords: de novo assembly, Spades, Galaxy, Microbial Genomics Virtual Lab\n\n\nBackground\n\n\nSpades is one of a number of \nde novo\n assemblers that use short read sets as input (e.g. Illumina Reads), and the assembly method is based on de Bruijn graphs. For information about Spades see this \nlink\n.\n\n\n\n\n\nIn this activity, we will perform a \nde novo\n assembly of a short read set using the Spades assembler. The output from Spades that we are interested in is a multiFASTA file that contains the draft genome sequence.\n\n\n\n\n\nLearning objectives\n\n\nAt the end of this tutorial you should be able to:\n\n\n\n\n\n\n\nassemble the reads using Spades, and\n\n\nexamine the output assembly.\n\n\n\n\n\n\n\nImport and view data\n\n\n\n\n\nSee \nhere\n for information about how to start with Galaxy, and \nhere\n for the link to import the Galaxy history for this tutorial, if you don\u2019t already have them in your history.\n\n\n\n\nThe read set for today is from an imaginary \nStaphylococcus aureus\n bacterium with a miniature genome.\n\n\n\n\nThe whole genome shotgun method used to sequence our mutant strain read set was produced on an Illumina DNA sequencing instrument.\n\n\n\n\n\n\nThe files we need for assembly are the \nmutant_R1.fastq\n and \nmutant_R2.fastq\n.\n\n\n\n\n\n\n(We don\u2019t need the reference genome sequences for this tutorial).\n\n\n\n\n\n\nThe reads are paired-end.\n\n\n\n\n\n\nEach read is 150 bases long. \n\n\n\n\n\n\nThe number of bases sequenced is equivalent to 19x the genome sequence of the wildtype strain. (Read coverage 19x - rather low!).\n\n\n\n\n\n\n\n\n\n\n\nClick on the View Data button (the \n) next to one of the FASTQ sequence files.\n\n\n\n\n\n\n\nAssemble reads with Spades\n\n\n\n\nWe will perform a \nde novo\n assembly of the mutant FASTQ reads into long contiguous sequences (in FASTA format.)\n\n\n\n\n\n\n\n\n\nGo to \nTools \u2192 NGS Analysis \u2192 NGS: Assembly \u2192 spades\n\n\n\n\nSet the following parameters (leave other settings as they are):\n\n\n\n\nRun only Assembly\n: \nYes\n [the \nYes\n button should be darker grey]\n\n\nKmers to use separated by commas:\n \n33,55,91\n  [note: no spaces]  \n\n\nCoverage cutoff:\n \nauto\n  \n\n\nFiles \u2192 Forward reads:\n \nmutant_R1.fastq\n  \n\n\nFiles \u2192 Reverse reads:\n \nmutant_R2.fastq\n  \n\n\n\n\n\n\n\n\nYour tool interface should look like this:\n\n\n\n\n\n\n\n\n\n\nClick \nExecute\n\n\n\n\nExamine the output\n\n\n\n\nGalaxy is now running Spades on the reads for you.\n\n\n\n\nWhen it is finished, you will have five new files in your history.  \n\n\n\n\ntwo FASTA files of the resulting contigs and scaffolds\n\n\ntwo files for statistics about these\n\n\nthe Spades logfile\n\n\n\n\n\n\n\n\n\n\n\n\nClick on the View Data button \n on each of the files.\n\n\nNote that the short reads have been assembled into much longer contigs.\n\n\n(However, in this case, the contigs have not been assembled into larger scaffolds.)\n\n\nThe stats files will give you the length of each of the contigs.",
            "title": "Genome assembly"
        },
        {
            "location": "/modules/spades/#assembly-using-spades",
            "text": "Keywords: de novo assembly, Spades, Galaxy, Microbial Genomics Virtual Lab",
            "title": "Assembly using Spades"
        },
        {
            "location": "/modules/spades/#background",
            "text": "Spades is one of a number of  de novo  assemblers that use short read sets as input (e.g. Illumina Reads), and the assembly method is based on de Bruijn graphs. For information about Spades see this  link .   In this activity, we will perform a  de novo  assembly of a short read set using the Spades assembler. The output from Spades that we are interested in is a multiFASTA file that contains the draft genome sequence.",
            "title": "Background"
        },
        {
            "location": "/modules/spades/#learning-objectives",
            "text": "At the end of this tutorial you should be able to:    assemble the reads using Spades, and  examine the output assembly.",
            "title": "Learning objectives"
        },
        {
            "location": "/modules/spades/#import-and-view-data",
            "text": "See  here  for information about how to start with Galaxy, and  here  for the link to import the Galaxy history for this tutorial, if you don\u2019t already have them in your history.   The read set for today is from an imaginary  Staphylococcus aureus  bacterium with a miniature genome.   The whole genome shotgun method used to sequence our mutant strain read set was produced on an Illumina DNA sequencing instrument.    The files we need for assembly are the  mutant_R1.fastq  and  mutant_R2.fastq .    (We don\u2019t need the reference genome sequences for this tutorial).    The reads are paired-end.    Each read is 150 bases long.     The number of bases sequenced is equivalent to 19x the genome sequence of the wildtype strain. (Read coverage 19x - rather low!).      Click on the View Data button (the  ) next to one of the FASTQ sequence files.",
            "title": "Import and view data"
        },
        {
            "location": "/modules/spades/#assemble-reads-with-spades",
            "text": "We will perform a  de novo  assembly of the mutant FASTQ reads into long contiguous sequences (in FASTA format.)     Go to  Tools \u2192 NGS Analysis \u2192 NGS: Assembly \u2192 spades   Set the following parameters (leave other settings as they are):   Run only Assembly :  Yes  [the  Yes  button should be darker grey]  Kmers to use separated by commas:   33,55,91   [note: no spaces]    Coverage cutoff:   auto     Files \u2192 Forward reads:   mutant_R1.fastq     Files \u2192 Reverse reads:   mutant_R2.fastq        Your tool interface should look like this:      Click  Execute",
            "title": "Assemble reads with Spades"
        },
        {
            "location": "/modules/spades/#examine-the-output",
            "text": "Galaxy is now running Spades on the reads for you.   When it is finished, you will have five new files in your history.     two FASTA files of the resulting contigs and scaffolds  two files for statistics about these  the Spades logfile       Click on the View Data button   on each of the files.  Note that the short reads have been assembled into much longer contigs.  (However, in this case, the contigs have not been assembled into larger scaffolds.)  The stats files will give you the length of each of the contigs.",
            "title": "Examine the output"
        },
        {
            "location": "/modules/prokka/",
            "text": "Genome annotation using Prokka\n\n\nKeywords: annotation, Prokka, JBrowse, Galaxy, Microbial Genomics Virtual Lab\n\n\nBackground\n\n\nIn this section we will use a software tool called Prokka to annotate the draft genome sequence produced in the previous \ntutorial\n. Prokka is a \u201cwrapper\u201d; it collects together several pieces of software (from various authors), and so avoids \u201cre-inventing the wheel\u201d.\n\n\nProkka finds and annotates features (both protein coding regions and RNA genes, i.e. tRNA, rRNA) present on on a sequence. Note, Prokka uses a two-step process for the annotation of protein coding regions: first, protein coding regions on the genome are identified using \nProdigal\n; second, the \nfunction\n of the encoded protein is predicted by similarity to proteins in one of many protein or protein domain databases. Prokka is a software tool that can be used to annotate bacterial, archaeal and viral genomes quickly, generating standard output files in GenBank, EMBL and gff formats. More information about Prokka can be found \nhere\n.\n\n\nLearning objectives\n\n\nAt the end of this tutorial you should be able to:\n\n\n\n\nload a genome assembly into Prokka\n\n\nannotate the assembly using Prokka\n\n\nexamine the annotated genome using JBrowse\n\n\n\n\nInput data\n\n\nProkka requires assembled contigs.\n\n\n\n\n\n\nIf you are continuing on from the previous workshop (\nAssembly with Spades\n), this file will be in your current history: \nSPAdes_contigs.fasta\n.\n\n\n\n\n\n\nAlternatively, get the file called \u201cassembled contigs\u201d from the \nTraining dataset page.\n\n\n\n\n\n\n\n\n\nRun Prokka\n\n\n\n\nIn Galaxy, go to \nTools \u2192 NGS Analysis \u2192 NGS: Annotation \u2192 Prokka\n  \n\n\nSet the following parameters (leave everything else unchanged):\n\n\nContigs to annotate\n: \nSPAdes contigs (fasta)\n  \n\n\nLocus tag prefix (\u2013locustag)\n: P\n\n\nForce GenBank/ENA/DDJB compliance (\u2013compliant)\n: \nNo\n\n\nSequencing Centre ID (\u2013centre)\n: V\n\n\nGenus Name\n: \nStaphylococcus\n  \n\n\nSpecies Name\n: \naureus\n  \n\n\nUse genus-specific BLAST database\n \nNo\n  \n\n\n\n\n\n\n\n\nYour tool interface should look like this:\n\n\n\n\n\n\nClick \nExecute\n  \n\n\n\n\nExamine the output\n\n\n\n\n\nOnce Prokka has finished, examine each of its output files.\n\n\n\n\nThe \nGFF\n and \nGBK\n files contain all of the information about the features annotated (in different formats.)\n\n\nThe \n.txt\n file contains a summary of the number of features annotated.\n\n\nThe \n.faa\n file contains the protein sequences of the genes annotated.\n\n\nThe \n.ffn\n file contains the nucleotide sequences of the genes annotated.\n\n\n\n\nView annotated features in JBrowse\n\n\nNow that we have annotated the draft genome sequence, we would like to view the sequence in the JBrowse genome viewer.\n\n\n\n\n\n\nGo to \nStatistics and Visualisation \u2192 Graph/Display Data \u2192 JBrowse genome browser\n.\n\n\n\n\n\n\nUnder \nReference genome to display\n choose \nUse a genome from history\n.\n\n\n\n\n\n\nUnder \nSelect the reference genome\n choose \nProkka on data XX:fna\n. This .fna sequence is the fasta nucleotide sequence, and will be the reference against which annotations are displayed.\n\n\n\n\n\n\nFor \nProduce a Standalone Instance\n select \nYes\n.\n\n\n\n\n\n\nFor \nGenetic Code\n choose \n11: The Bacterial, Archaeal and Plant Plastid Code\n.\n\n\n\n\n\n\nUnder \nJBrowse-in-Galaxy Action\n choose \nNew JBrowse Instance\n.\n\n\n\n\n\n\nClick \nInsert Track Group\n\n\n\n\n\n\nUnder \nTrack Category\n type in \ngene annotations\n.\n\n\n\n\n\n\nClick \nInsert Annotation Track\n\n\n\n\n\n\nFor \nTrack Type\n choose \nGFF/GFF3/BED/GBK Features\n\n\n\n\n\n\nFor \nGFF/GFF3/BED Track Data\n select \nProkka on data XX:gff\n  [Note: not wildtype.gff]\n\n\n\n\n\n\nUnder \nJBrowse Track Type[Advanced]\n select \nCanvas Features\n.\n\n\n\n\n\n\nClick on \nJBrowse Styling Options \n\n\n\n\n\n\nUnder \nJBrowse style.label\n add in \nproduct\n.\n\n\n\n\n\n\nUnder \nTrack Visibility\n choose \nOn for new users\n.\n\n\n\n\n\n\nYour tool interface should look like this:\n\n\n\n\n\n\n\n\n\n\n\nClick \nExecute\n\n\n\n\n\n\nA new file will be created, called \nJBrowse on data XX and data XX - Complete\n. Click on the eye icon next to the file name. The JBrowse window will appear in the centre Galaxy panel.\n\n\n\n\n\n\nUnder \nAvailable Tracks\n on the left, tick the box for \nProkka on data XX:gff\n.\n\n\n\n\n\n\nSelect contig 1 in the drop down box. You can only see one contig displayed at a time.\n\n\n\n\n\n\n\n\n\n\n\n\nUse the plus and minus buttons to zoom in and out, and the arrows to move left or right (or click and drag within the window to move left or right).\n\n\n\n\n\n\nZoom in to see the reference sequence at the top. JBrowse displays the sequence and a 6-frame amino acid translation.\n\n\n\n\n\n\nZoomed in view:\n\n\n\n\n\n\nRight click on a gene/feature annotation (the bars on the annotation track), then select \nView Details\n to see more information.\n\n\ngene name\n\n\nproduct name\n\n\nyou can download the FASTA sequence by clicking on the disk icon.",
            "title": "Genome annotation"
        },
        {
            "location": "/modules/prokka/#genome-annotation-using-prokka",
            "text": "Keywords: annotation, Prokka, JBrowse, Galaxy, Microbial Genomics Virtual Lab",
            "title": "Genome annotation using Prokka"
        },
        {
            "location": "/modules/prokka/#background",
            "text": "In this section we will use a software tool called Prokka to annotate the draft genome sequence produced in the previous  tutorial . Prokka is a \u201cwrapper\u201d; it collects together several pieces of software (from various authors), and so avoids \u201cre-inventing the wheel\u201d.  Prokka finds and annotates features (both protein coding regions and RNA genes, i.e. tRNA, rRNA) present on on a sequence. Note, Prokka uses a two-step process for the annotation of protein coding regions: first, protein coding regions on the genome are identified using  Prodigal ; second, the  function  of the encoded protein is predicted by similarity to proteins in one of many protein or protein domain databases. Prokka is a software tool that can be used to annotate bacterial, archaeal and viral genomes quickly, generating standard output files in GenBank, EMBL and gff formats. More information about Prokka can be found  here .",
            "title": "Background"
        },
        {
            "location": "/modules/prokka/#learning-objectives",
            "text": "At the end of this tutorial you should be able to:   load a genome assembly into Prokka  annotate the assembly using Prokka  examine the annotated genome using JBrowse",
            "title": "Learning objectives"
        },
        {
            "location": "/modules/prokka/#input-data",
            "text": "Prokka requires assembled contigs.    If you are continuing on from the previous workshop ( Assembly with Spades ), this file will be in your current history:  SPAdes_contigs.fasta .    Alternatively, get the file called \u201cassembled contigs\u201d from the  Training dataset page.",
            "title": "Input data"
        },
        {
            "location": "/modules/prokka/#run-prokka",
            "text": "In Galaxy, go to  Tools \u2192 NGS Analysis \u2192 NGS: Annotation \u2192 Prokka     Set the following parameters (leave everything else unchanged):  Contigs to annotate :  SPAdes contigs (fasta)     Locus tag prefix (\u2013locustag) : P  Force GenBank/ENA/DDJB compliance (\u2013compliant) :  No  Sequencing Centre ID (\u2013centre) : V  Genus Name :  Staphylococcus     Species Name :  aureus     Use genus-specific BLAST database   No        Your tool interface should look like this:    Click  Execute",
            "title": "Run Prokka"
        },
        {
            "location": "/modules/prokka/#examine-the-output",
            "text": "Once Prokka has finished, examine each of its output files.   The  GFF  and  GBK  files contain all of the information about the features annotated (in different formats.)  The  .txt  file contains a summary of the number of features annotated.  The  .faa  file contains the protein sequences of the genes annotated.  The  .ffn  file contains the nucleotide sequences of the genes annotated.",
            "title": "Examine the output"
        },
        {
            "location": "/modules/prokka/#view-annotated-features-in-jbrowse",
            "text": "Now that we have annotated the draft genome sequence, we would like to view the sequence in the JBrowse genome viewer.    Go to  Statistics and Visualisation \u2192 Graph/Display Data \u2192 JBrowse genome browser .    Under  Reference genome to display  choose  Use a genome from history .    Under  Select the reference genome  choose  Prokka on data XX:fna . This .fna sequence is the fasta nucleotide sequence, and will be the reference against which annotations are displayed.    For  Produce a Standalone Instance  select  Yes .    For  Genetic Code  choose  11: The Bacterial, Archaeal and Plant Plastid Code .    Under  JBrowse-in-Galaxy Action  choose  New JBrowse Instance .    Click  Insert Track Group    Under  Track Category  type in  gene annotations .    Click  Insert Annotation Track    For  Track Type  choose  GFF/GFF3/BED/GBK Features    For  GFF/GFF3/BED Track Data  select  Prokka on data XX:gff   [Note: not wildtype.gff]    Under  JBrowse Track Type[Advanced]  select  Canvas Features .    Click on  JBrowse Styling Options     Under  JBrowse style.label  add in  product .    Under  Track Visibility  choose  On for new users .    Your tool interface should look like this:      Click  Execute    A new file will be created, called  JBrowse on data XX and data XX - Complete . Click on the eye icon next to the file name. The JBrowse window will appear in the centre Galaxy panel.    Under  Available Tracks  on the left, tick the box for  Prokka on data XX:gff .    Select contig 1 in the drop down box. You can only see one contig displayed at a time.       Use the plus and minus buttons to zoom in and out, and the arrows to move left or right (or click and drag within the window to move left or right).    Zoom in to see the reference sequence at the top. JBrowse displays the sequence and a 6-frame amino acid translation.    Zoomed in view:    Right click on a gene/feature annotation (the bars on the annotation track), then select  View Details  to see more information.  gene name  product name  you can download the FASTA sequence by clicking on the disk icon.",
            "title": "View annotated features in JBrowse"
        },
        {
            "location": "/modules/snippy/",
            "text": "Variant calling with Snippy\n\n\nKeywords: variant calling, SNP, Snippy, JBrowse, Galaxy, Microbial Genomics Virtual Lab\n\n\nBackground\n\n\nVariant calling is the process of identifying differences between two genome samples.\nUsually differences are limited to single nucleotide polymorphisms (SNPs) and small insertions and deletions (indels). Larger structural variation such as inversions, duplications and large deletions are not typically covered by \u201cvariant calling\u201d.\n\n\nIn this tutorial, we will use the tool \u201cSnippy\u201d (link to Snippy is \nhere\n). Snippy uses a tool to align the reads to a reference genome, and another tool to decide (\u201ccall\u201d) if the discrepancies are real variants.\n\n\nLearning Objectives\n\n\n\n\nFind variants between a reference genome and a set of reads\n\n\nVisualise the SNP in context of the reads aligned to the genome\n\n\nDetermine the effect of those variants on genomic features\n\n\nUnderstand if the SNP is potentially affecting the phenotype\n\n\n\n\nPrepare reference\n\n\n\n\n\n\n\n\nFor variant calling, we need a reference genome that is of the same strain as the input sequence reads.\n\n\nFor this tutorial, our reference is the \nwildtype.gbk\n file and our reads are \nmutant_R1.fastq\n and \nmutant_R2.fastq\n.\n\n\nIf these files are not presently in your Galaxy history, import them from the \nTraining dataset page.\n\n\nCall variants with Snippy\n\n\n\n\nGo to \nTools \u2192 NGS Analysis \u2192 NGS: Variant Analysis \u2192 snippy\n\n\nFor \nReference type\n select \nGenbank\n.\n\n\nThen for \nReference Genbank\n choose the \nwildtype.gbk\n file.\n\n\nFor \nSingle or Paired-end reads\n choose \nPaired\n.\n\n\nThen choose the first set of reads, \nmutant_R1.fastq\n and second set of reads, \nmutant_R2.fastq\n.\n\n\nFor \nCleanup the non-snp output files\n select \nNo\n.\n\n\n\n\nYour tool interface should look like this:\n\n\n\n\n\n\nClick \nExecute\n.\n\n\n\n\nExamine Snippy output\n\n\n\n\n\nFrom Snippy, there are 10 output files in various formats.\n\n\n\n\nGo to the file called \nsnippy on data XX, data XX and data XX table\n and click on the eye icon.\n\n\nWe can see a list of variants. Look in column 3 to see which types the variants are, such as a SNP or a deletion.\n\n\nLook at the third variant called. This is a T\u2192A mutation, causing a stop codon. Look at column 14: the product of this gene is a methicillin resistance protein. Methicillin is an antibiotic. What might be the result of such a mutation? \n\n\n\n\nView Snippy output in JBrowse\n\n\n\n\n\n\nGo to \nStatistics and Visualisation \u2192 Graph/Display Data \u2192 JBrowse genome browser\n.\n\n\n\n\n\n\nUnder \nReference genome to display\n choose \nUse a genome from history\n.\n\n\n\n\n\n\nUnder \nSelect the reference genome\n choose \nwildtype.fna\n. This sequence will be the reference against which annotations are displayed.\n\n\n\n\n\n\nFor \nProduce a Standalone Instance\n select \nYes\n.\n\n\n\n\n\n\nFor \nGenetic Code\n choose \n11: The Bacterial, Archaeal and Plant Plastid Code\n.\n\n\n\n\n\n\nUnder \nJBrowse-in-Galaxy Action\n choose \nNew JBrowse Instance\n.\n\n\n\n\n\n\nWe will now set up three different tracks - these are datasets displayed underneath the reference sequence (which is displayed as nucleotides in FASTA format). We will choose to display the sequence reads (the .bam file), the variants found by snippy (the .gff file) and the annotated reference genome (the wildtype.gff)\n\n\n\n\n\n\nTrack 1 - sequence reads\n\n\n\n\nClick \nInsert Track Group\n\n\nFor \nTrack Cateogry\n name it \u201csequence reads\u201d\n\n\nClick \nInsert Annotation Track\n\n\nFor \nTrack Type\n choose \nBAM Pileups\n\n\nFor \nBAM Track Data\n select \nthe snippy bam file\n\n\nFor \nAutogenerate SNP Track\n select \nYes\n\n\nUnder \nTrack Visibility\n choose \nOn for new users\n.\n\n\n\n\nTrack 2 - variants\n\n\n\n\nClick \nInsert Track Group\n again\n\n\nFor \nTrack Category\n name it \u201cvariants\u201d\n\n\nClick \nInsert Annotation Track\n\n\nFor \nTrack Type\n choose \nGFF/GFF3/BED/GBK Features\n\n\nFor \nTrack Data\n select \nthe snippy snps gff file\n\n\nUnder \nTrack Visibility\n choose \nOn for new users\n.\n\n\n\n\nTrack 3 - annotated reference\n\n\n\n\nClick \nInsert Track Group\n again\n\n\nFor \n Track Category\n name it \u201cannotated reference\u201d\n\n\nClick \nInsert Annotation Track\n\n\nFor \nTrack Type\n choose \nGFF/GFF3/BED/GBK Features\n\n\nFor \nTrack Data\n select \nwildtype.gff\n\n\nUnder \nJBrowse Track Type[Advanced]\n select \nCanvas Features\n.\n\n\nClick on \nJBrowse Styling Options \n\n\nUnder \nJBrowse style.label\n add in the word \nproduct\n.\n\n\nUnder \nJBrowse style.description\n add in the word \nproduct\n.\n\n\n\n\nUnder \nTrack Visibility\n choose \nOn for new users\n.\n\n\n\n\n\n\nClick \nExecute\n\n\n\n\n\n\nA new file will be created, called \nJBrowse on data XX and data XX - Complete\n. Click on the eye icon next to the file name. The JBrowse window will appear in the centre Galaxy panel.\n\n\n\n\n\n\nOn the left, tick boxes to display the tracks\n\n\n\n\n\n\nUse the minus button to zoom out to see:\n\n\n\n\nsequence reads and their coverage (the grey graph)\n\n\n\n\n\n\n\n\nUse the plus button to zoom in to see:\n\n\n\n\nprobable real variants (a whole column of snps)\n\n\nprobable errors (single one here and there)\n\n\n\n\n\n\n\n\n\n\n\n\nIn the coordinates box, type in \n47299\n and then \nGo\n to see the position of the SNP discussed above.\n\n\nthe correct codon at this position is TGT, coding for the amino acid Cysteine, in the middle row of the amino acid translations.\n\n\nthe mutation of T \u2192 A turns this triplet into TGA, a stop codon.",
            "title": "Variant finding"
        },
        {
            "location": "/modules/snippy/#variant-calling-with-snippy",
            "text": "Keywords: variant calling, SNP, Snippy, JBrowse, Galaxy, Microbial Genomics Virtual Lab",
            "title": "Variant calling with Snippy"
        },
        {
            "location": "/modules/snippy/#background",
            "text": "Variant calling is the process of identifying differences between two genome samples.\nUsually differences are limited to single nucleotide polymorphisms (SNPs) and small insertions and deletions (indels). Larger structural variation such as inversions, duplications and large deletions are not typically covered by \u201cvariant calling\u201d.  In this tutorial, we will use the tool \u201cSnippy\u201d (link to Snippy is  here ). Snippy uses a tool to align the reads to a reference genome, and another tool to decide (\u201ccall\u201d) if the discrepancies are real variants.",
            "title": "Background"
        },
        {
            "location": "/modules/snippy/#learning-objectives",
            "text": "Find variants between a reference genome and a set of reads  Visualise the SNP in context of the reads aligned to the genome  Determine the effect of those variants on genomic features  Understand if the SNP is potentially affecting the phenotype",
            "title": "Learning Objectives"
        },
        {
            "location": "/modules/snippy/#prepare-reference",
            "text": "For variant calling, we need a reference genome that is of the same strain as the input sequence reads.  For this tutorial, our reference is the  wildtype.gbk  file and our reads are  mutant_R1.fastq  and  mutant_R2.fastq .  If these files are not presently in your Galaxy history, import them from the  Training dataset page.",
            "title": "Prepare reference"
        },
        {
            "location": "/modules/snippy/#call-variants-with-snippy",
            "text": "Go to  Tools \u2192 NGS Analysis \u2192 NGS: Variant Analysis \u2192 snippy  For  Reference type  select  Genbank .  Then for  Reference Genbank  choose the  wildtype.gbk  file.  For  Single or Paired-end reads  choose  Paired .  Then choose the first set of reads,  mutant_R1.fastq  and second set of reads,  mutant_R2.fastq .  For  Cleanup the non-snp output files  select  No .   Your tool interface should look like this:    Click  Execute .",
            "title": "Call variants with Snippy"
        },
        {
            "location": "/modules/snippy/#examine-snippy-output",
            "text": "From Snippy, there are 10 output files in various formats.   Go to the file called  snippy on data XX, data XX and data XX table  and click on the eye icon.  We can see a list of variants. Look in column 3 to see which types the variants are, such as a SNP or a deletion.  Look at the third variant called. This is a T\u2192A mutation, causing a stop codon. Look at column 14: the product of this gene is a methicillin resistance protein. Methicillin is an antibiotic. What might be the result of such a mutation?",
            "title": "Examine Snippy output"
        },
        {
            "location": "/modules/snippy/#view-snippy-output-in-jbrowse",
            "text": "Go to  Statistics and Visualisation \u2192 Graph/Display Data \u2192 JBrowse genome browser .    Under  Reference genome to display  choose  Use a genome from history .    Under  Select the reference genome  choose  wildtype.fna . This sequence will be the reference against which annotations are displayed.    For  Produce a Standalone Instance  select  Yes .    For  Genetic Code  choose  11: The Bacterial, Archaeal and Plant Plastid Code .    Under  JBrowse-in-Galaxy Action  choose  New JBrowse Instance .    We will now set up three different tracks - these are datasets displayed underneath the reference sequence (which is displayed as nucleotides in FASTA format). We will choose to display the sequence reads (the .bam file), the variants found by snippy (the .gff file) and the annotated reference genome (the wildtype.gff)    Track 1 - sequence reads   Click  Insert Track Group  For  Track Cateogry  name it \u201csequence reads\u201d  Click  Insert Annotation Track  For  Track Type  choose  BAM Pileups  For  BAM Track Data  select  the snippy bam file  For  Autogenerate SNP Track  select  Yes  Under  Track Visibility  choose  On for new users .   Track 2 - variants   Click  Insert Track Group  again  For  Track Category  name it \u201cvariants\u201d  Click  Insert Annotation Track  For  Track Type  choose  GFF/GFF3/BED/GBK Features  For  Track Data  select  the snippy snps gff file  Under  Track Visibility  choose  On for new users .   Track 3 - annotated reference   Click  Insert Track Group  again  For   Track Category  name it \u201cannotated reference\u201d  Click  Insert Annotation Track  For  Track Type  choose  GFF/GFF3/BED/GBK Features  For  Track Data  select  wildtype.gff  Under  JBrowse Track Type[Advanced]  select  Canvas Features .  Click on  JBrowse Styling Options   Under  JBrowse style.label  add in the word  product .  Under  JBrowse style.description  add in the word  product .   Under  Track Visibility  choose  On for new users .    Click  Execute    A new file will be created, called  JBrowse on data XX and data XX - Complete . Click on the eye icon next to the file name. The JBrowse window will appear in the centre Galaxy panel.    On the left, tick boxes to display the tracks    Use the minus button to zoom out to see:   sequence reads and their coverage (the grey graph)     Use the plus button to zoom in to see:   probable real variants (a whole column of snps)  probable errors (single one here and there)       In the coordinates box, type in  47299  and then  Go  to see the position of the SNP discussed above.  the correct codon at this position is TGT, coding for the amino acid Cysteine, in the middle row of the amino acid translations.  the mutation of T \u2192 A turns this triplet into TGA, a stop codon.",
            "title": "View Snippy output in JBrowse"
        },
        {
            "location": "/modules/abricate/",
            "text": "Finding antibiotic-resistant genes\n\n\nOverview\n\n\n\n\nImport an assembled bacterial genome\n\n\nFind antibiotic-resistance (AMR) genes\n\n\n\n\nImport data\n\n\n\n\nGo to your Galaxy instance.\n\n\n\n\nSet up a new History for this Activity.\n\n\n\n\nIn the History panel, click on the cog icon, select \nCreate New\n.\n\n\nA new empty history should appear; click on \nUnnamed history\n and re-name it (e.g. AMR genes).\n\n\n\n\n\n\n\n\n\n\nImport an assembled genome (or use one from your history).\n\n\n\n\nCopy this URL for a previously-assembled genome:  \nhttps://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/Microbial_tutorials/SPAdes_contigs.fasta\n\n\nFrom the Galaxy tool panel, click on \nGet Data \u2192 Upload File\n  \n\n\nClick the \nPaste/Fetch data\n button  \n\n\nPaste the URL into the box.\n\n\nClick the \nStart\n button.  \n\n\nOnce the progress bar reaches 100%, click the \nClose\n button  \n\n\nThe file will now upload to your current history.\n\n\nRe-name it with the pencil icon to \ncontigs.fasta\n.\n\n\n\n\n\n\n\n\nFind antibiotic-resistance genes\n\n\n\n\nWe will use the tool called \nABRicate\n to find antibiotic resistance genes in the (draft) genome.\n\n\nABRicate uses a \ndatabase\n of these genes called \nResFinder\n.\n\n\n\n\nIn the tools panel, go to \nNGS Analysis: NGS Annotation: ABRicate\n.\n\n\n\n\nFor \nSelect fasta file\n choose \ncontigs.fasta\n (or the name of your own assembly file.)\n\n\nClick \nExecute\n.\n\n\n\n\nThere is one output file. Click on the eye icon to view. It should look like this, although likely with a different number of rows.\n\n\n\n\nThis shows a table with one line for each antibiotic resistance gene found, in which contig, at which position, and the % coverage.\n\n\n\n\n\n\nNext\n\n\nIn the output from Abricate, column 5 has the list of the antibiotic-resistant gene names. Some of these may be complete, exact matches, and some may have a gap/mutation in their sequence which can affect whether that protein is actually expressed.\n\n\nTo find out more about what type of AMR genes these are, you can search \nGenbank\n with the gene name (e.g. aadD).",
            "title": "Finding antibiotic-resistance genes"
        },
        {
            "location": "/modules/abricate/#finding-antibiotic-resistant-genes",
            "text": "",
            "title": "Finding antibiotic-resistant genes"
        },
        {
            "location": "/modules/abricate/#overview",
            "text": "Import an assembled bacterial genome  Find antibiotic-resistance (AMR) genes",
            "title": "Overview"
        },
        {
            "location": "/modules/abricate/#import-data",
            "text": "Go to your Galaxy instance.   Set up a new History for this Activity.   In the History panel, click on the cog icon, select  Create New .  A new empty history should appear; click on  Unnamed history  and re-name it (e.g. AMR genes).      Import an assembled genome (or use one from your history).   Copy this URL for a previously-assembled genome:   https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/Microbial_tutorials/SPAdes_contigs.fasta  From the Galaxy tool panel, click on  Get Data \u2192 Upload File     Click the  Paste/Fetch data  button    Paste the URL into the box.  Click the  Start  button.    Once the progress bar reaches 100%, click the  Close  button    The file will now upload to your current history.  Re-name it with the pencil icon to  contigs.fasta .",
            "title": "Import data"
        },
        {
            "location": "/modules/abricate/#find-antibiotic-resistance-genes",
            "text": "We will use the tool called  ABRicate  to find antibiotic resistance genes in the (draft) genome.  ABRicate uses a  database  of these genes called  ResFinder .   In the tools panel, go to  NGS Analysis: NGS Annotation: ABRicate .   For  Select fasta file  choose  contigs.fasta  (or the name of your own assembly file.)  Click  Execute .   There is one output file. Click on the eye icon to view. It should look like this, although likely with a different number of rows.   This shows a table with one line for each antibiotic resistance gene found, in which contig, at which position, and the % coverage.",
            "title": "Find antibiotic-resistance genes"
        },
        {
            "location": "/modules/abricate/#next",
            "text": "In the output from Abricate, column 5 has the list of the antibiotic-resistant gene names. Some of these may be complete, exact matches, and some may have a gap/mutation in their sequence which can affect whether that protein is actually expressed.  To find out more about what type of AMR genes these are, you can search  Genbank  with the gene name (e.g. aadD).",
            "title": "Next"
        },
        {
            "location": "/modules/kraken/",
            "text": "Sample identification with Kraken\n\n\nTo identify a sample from sequencing reads, we can use the tool \u201cKraken\u201d. This tool can also be used to identify members in a mixed set of reads, for metagenomics.\n\n\n\n\n\n\ne.g. reads from one sample \u2192 Kraken \u2192 95% \nStaphylococcus aureus\n.\n\n\n\n\n\n\ne.g. mixed reads \u2192 Kraken \u2192 50% \nStaphylococcus aureus\n, 40%  \nCampylobacter concisus\n, 10% unclassified.\n\n\n\n\n\n\n\n\n\nIn this tutorial we will use Kraken to confirm the identify of reads from a bacterial isolate.\n\n\nGet data\n\n\nIn Galaxy, go to \nShared Data\n in the top panel, and click on the history named \nKraken data\n. In the top right, click \nSwitch to this history\n.\n\n\nYour current history should now contain four files. If you are using the tutorial independently of a workshop, at this stage you can upload your FASTQ files into the current history.\n\n\n\n\n\n\n\nRun Kraken\n\n\nWe have a sample that should be \nStaphylococcus aureus\n. The paired-end FASTQ read files are:\n\n\n\n\nstaph_R1.fq\n and \nstaph_R2.fq\n.\n\n\n\n\n(We will look at the other set of files later on in the tutorial).\n\n\n\n\n\n\nGo to \nTools \u2192 NGS Analysis \u2192 Metagenomic analyses \u2192 Kraken, assign taxonomic labels to sequencing reads\n\n\n\n\n\n\nSet the following parameters:\n\n\n\n\nSingle or paired reads\n: \nPaired\n\n\nForward strand:\n \nstaph_R1.fq\n\n\nReverse strand:\n \nstaph_R2.fq\n\n\nleave other settings as they are\n\n\n\n\n\n\n\n\nYour tool interface should look like this:\n\n\n\n\n\n\n\n\n\n\nClick \nExecute\n\n\n\n\n\n\n\nExamine the output\n\n\nThe output is a file called \nKraken on data x and x: Classification\n. This will be at the top of your history pane.\n\n\nClick \nRefresh\n if the file hasn\u2019t yet turned green.\n\n\n\n\nWhen the file is green, click on the eye icon to view.\n\n\n\n\nWe will turn this output into something easier to read in the next step.\n\n\nColumn 2 is the sequence ID.\n\n\nColumn 3 is the taxon ID (from NCBI).\n\n\nColumn 5 is a summary of all the taxon IDs that each k-mer in the sequence matched to (taxon ID:number of k-mers).  \n\n\n\n\n\n\n\n\n\nKraken report\n\n\nGo to \nTools \u2192 NGS Analysis \u2192 Metagenomic analyses \u2192 Kraken-report\n\n\n\n\n\n\nSet the following parameters:\n\n\n\n\nKraken output\n: \nKraken on data x and x: Classification\n\n\nSelect a Kraken database\n: \nkrakendb\n\n\nClick \nExecute\n\n\n\n\n\n\n\n\nThe output file is called \nKraken-report on data x\n.\n\n\n\n\nClick on the eye icon to view.\n\n\nColumn 1: percentage of reads in the clade/taxon in Column 6\n\n\nColumn 2: number of reads in the clade.\n\n\nColumn 3: number of reads in the clade but not further classified.\n\n\nColumn 4: code indicating the rank of the classification: (U)nclassified, (D)omain, (K)ingdom, (P)hylum, (C)lass, (O)rder, (F)amily, (G)enus, (S)pecies).\n\n\nColumn 5: NCBI taxonomy ID.\n\n\n\n\n\n\nApproximately 95% of reads were classified as \nStaphylococcus aureus\n, confirming the correct identity of our bacterial sample.\n\n\n\n\nOf these reads, roughly half were uniquely present in \nS. aureus\n subsp. \naureus\n, and most of those were uniquely present in strain HO 5096 0412.\n\n\nThe sample strain is therefore most related to the HO 5096 0412 strain.\n\n\n\n\nThe remaining reads within the \nS. aureus\n clade were classified into various taxa.\n\n\n\n\nScroll down column 3 to see the number of reads assigned directly to the taxon in column 6.\n\n\nThese are all very low and can be disregarded.\n\n\n\n\n\n\n\nNext\n\n\nRe-run Kraken with another sample. This sample should be \nEnterococcus faecalis\n.\n\n\n\n\nUse the files \nent_R1.fq\n and \nent_R2.fq\n.\n\n\nRun \nKraken\n with these files. These are paired-end reads.\n\n\nWith the \nClassification\n file from Kraken, run \nKraken-report\n.\n\n\nCick on the eye icon to view the \nKraken-report\n file.\n\n\n\n\n\n\n\n\n\n\n63% are classified to the genus \nEnterococcus\n, and most of these to \nE. faecalis\n.\n\n\n\n\n\n\nHowever, if we scroll down the table of results, we see that 31% are classified to the genus \nMycobacterium\n, mostly \nM. abscessus\n. These are not in the same phylum as \nEnterococcus\n.\n\n\n\n\n\n\n\n\n\n\nThis sample is probably contaminated.\n\n\n\n\nLinks\n\n\nKraken paper\n\n\nKraken software",
            "title": "Sample identification with Kraken"
        },
        {
            "location": "/modules/kraken/#sample-identification-with-kraken",
            "text": "To identify a sample from sequencing reads, we can use the tool \u201cKraken\u201d. This tool can also be used to identify members in a mixed set of reads, for metagenomics.    e.g. reads from one sample \u2192 Kraken \u2192 95%  Staphylococcus aureus .    e.g. mixed reads \u2192 Kraken \u2192 50%  Staphylococcus aureus , 40%   Campylobacter concisus , 10% unclassified.     In this tutorial we will use Kraken to confirm the identify of reads from a bacterial isolate.",
            "title": "Sample identification with Kraken"
        },
        {
            "location": "/modules/kraken/#get-data",
            "text": "In Galaxy, go to  Shared Data  in the top panel, and click on the history named  Kraken data . In the top right, click  Switch to this history .  Your current history should now contain four files. If you are using the tutorial independently of a workshop, at this stage you can upload your FASTQ files into the current history.",
            "title": "Get data"
        },
        {
            "location": "/modules/kraken/#run-kraken",
            "text": "We have a sample that should be  Staphylococcus aureus . The paired-end FASTQ read files are:   staph_R1.fq  and  staph_R2.fq .   (We will look at the other set of files later on in the tutorial).    Go to  Tools \u2192 NGS Analysis \u2192 Metagenomic analyses \u2192 Kraken, assign taxonomic labels to sequencing reads    Set the following parameters:   Single or paired reads :  Paired  Forward strand:   staph_R1.fq  Reverse strand:   staph_R2.fq  leave other settings as they are     Your tool interface should look like this:      Click  Execute",
            "title": "Run Kraken"
        },
        {
            "location": "/modules/kraken/#examine-the-output",
            "text": "The output is a file called  Kraken on data x and x: Classification . This will be at the top of your history pane.  Click  Refresh  if the file hasn\u2019t yet turned green.   When the file is green, click on the eye icon to view.   We will turn this output into something easier to read in the next step.  Column 2 is the sequence ID.  Column 3 is the taxon ID (from NCBI).  Column 5 is a summary of all the taxon IDs that each k-mer in the sequence matched to (taxon ID:number of k-mers).",
            "title": "Examine the output"
        },
        {
            "location": "/modules/kraken/#kraken-report",
            "text": "Go to  Tools \u2192 NGS Analysis \u2192 Metagenomic analyses \u2192 Kraken-report    Set the following parameters:   Kraken output :  Kraken on data x and x: Classification  Select a Kraken database :  krakendb  Click  Execute     The output file is called  Kraken-report on data x .   Click on the eye icon to view.  Column 1: percentage of reads in the clade/taxon in Column 6  Column 2: number of reads in the clade.  Column 3: number of reads in the clade but not further classified.  Column 4: code indicating the rank of the classification: (U)nclassified, (D)omain, (K)ingdom, (P)hylum, (C)lass, (O)rder, (F)amily, (G)enus, (S)pecies).  Column 5: NCBI taxonomy ID.    Approximately 95% of reads were classified as  Staphylococcus aureus , confirming the correct identity of our bacterial sample.   Of these reads, roughly half were uniquely present in  S. aureus  subsp.  aureus , and most of those were uniquely present in strain HO 5096 0412.  The sample strain is therefore most related to the HO 5096 0412 strain.   The remaining reads within the  S. aureus  clade were classified into various taxa.   Scroll down column 3 to see the number of reads assigned directly to the taxon in column 6.  These are all very low and can be disregarded.",
            "title": "Kraken report"
        },
        {
            "location": "/modules/kraken/#next",
            "text": "Re-run Kraken with another sample. This sample should be  Enterococcus faecalis .   Use the files  ent_R1.fq  and  ent_R2.fq .  Run  Kraken  with these files. These are paired-end reads.  With the  Classification  file from Kraken, run  Kraken-report .  Cick on the eye icon to view the  Kraken-report  file.      63% are classified to the genus  Enterococcus , and most of these to  E. faecalis .    However, if we scroll down the table of results, we see that 31% are classified to the genus  Mycobacterium , mostly  M. abscessus . These are not in the same phylum as  Enterococcus .      This sample is probably contaminated.",
            "title": "Next"
        },
        {
            "location": "/modules/kraken/#links",
            "text": "Kraken paper  Kraken software",
            "title": "Links"
        },
        {
            "location": "/modules/trimmomatic/",
            "text": "Trimming reads\n\n\nIntroduction\n\n\nAfter checking your input sequence reads for quality (e.g. using FastQC) it might be necessary to trim the reads. Here we will use the Trimmomatic tool. For more inforamtion, see the Trimmomatic \nwebpage\n and the \nmanual.\n\n\nLearning Objectives\n\n\nAt the end of this tutorial you should be able to:\n\n\n\n\ninput sequence reads to Trimmomatic\n\n\ntrim using appropriate parameters, and\n\n\nexamine the output trimmed reads.\n\n\n\n\nStart\n\n\n\n\nopen your Galaxy instance\n\n\nfind your quality-checked Illumina sequence reads\n\n\ne.g. \nmutant_R1.fastq\n and \nmutant_R2.fastq\n\n\nWe want to trim the parts of the reads that are of low quality\n\n\nbased on the FastQC results, we might want to trim the reads like this:\n\n\ntrim Illumina adapters\n\n\nleading and trailing bases - trim if quality is below 15\n\n\nsliding window - trim once average quality is below 20\n\n\n\n\n\n\n\n\nTrimmomatic functions\n\n\n\n\n\n\nAdapter trimming\n\n\n\n\nThis function trims adapters, barcodes and other contaminants from the reads.\n\n\nYou need to supply a FASTA file of possible adapter sequences, barcodes etc to trim. See Trimmomatic website for detailed instructions.\n\n\nThe default quality settings are sensible.\n\n\nThis should always be the first trimming step if it is used.\n\n\n\n\n\n\n\n\nSliding window trimming\n\n\n\n\nThis function uses a sliding window to measure average quality and trims accordingly.\n\n\nThe default quality parameters are sensible for this step.\n\n\n\n\n\n\n\n\nTrailing bases quality trimming\n\n\n\n\nThis function trims bases from the end of a read if they drop below a quality threshold. e.g. If base 69 of 75 drops below the threshold, the read is cut to 68 bases.\n\n\nUse FastQC report to decide whether this step is warranted and what quality value to use. A quality threshold value of 10-15 is a good starting point.\n\n\n\n\n\n\n\n\nLeading bases quality trimming\n\n\n\n\nThis function works in a similar fashion to trailing bases trimming except it performs it at the start of the reads.\n\n\nUse FastQC report to determine if this step is warranted. If the quality of bases is poor at the beginning of reads it might be necessary.\n\n\n\n\n\n\n\n\nMinimum read length\n\n\n\n\nOnce all trimming steps are complete, this function makes sure that the reads are still longer than this value. If not, the read is removed from the file and its pair is put into the orphan file.\n\n\nThe most appropriate value for this parameter will depend on the FastQC report, specifically the length of the high quality section of the Per Base Sequence Quality graph.\n\n\n\n\n\n\n\n\nEach read library should be trimmed separately with parameters dependent on their own FastQC reports.\n\n\n\n\n\n\nRun Trimmomatic\n\n\n\n\n\n\n\nGo to \nTools \u2192 NGS Analysis \u2192 NGS: QC and manipulation \u2192 Trimmomatic\n.\n\n\nInput FASTQ file (R1/first of pair)\n: \nmutant_R1.fastq\n\n\nInput FASTQ file (R2/second of pair)\n: \nmutant_R2.fastq\n\n\nPerform initial ILLUMINACLIP step \n: \nYes\n\n<!\u2014\n\n\nAdapter sequences to use\n: FIXME\n\u2014>\n\n\nHow accurate the match between the two \u2018adapter ligated\u2019 reads must be for PE palindrome read alignment\n: 40\n\n\nHow accurate the match between any adapter etc. sequence must be against a read\n: 15\n\n\nleave the first \nTrimmomatic Operation\n as is\n\n\nclick on \n+ Insert Trimmomatic Operation\n\n\nSelect Trimmomatic operation to perform\n: \nCut bases off the start of a read, if below a threshold quality (LEADING)\n\n\nMinimum quality required to keep a base\n: 15\n\n\nclick on \n+ Insert Trimmomatic Operation\n\n\nSelect Trimmomatic operation to perform\n: \nCut bases off the end of a read, if below a threshold quality (TRAILING)\n\n\nMinimum quality required to keep a base\n: 15\n\n\nclick \nExecute\n\n\n\n\n\n\n\nExamine output\n\n\nTrimmomatic should produce 2 pairs files (1 left and 1 right hand end) and 1 or 2 single \u201corphaned reads\u201d files.\n\n\nThe output files are the ones you should use for assembly.\n\n\nThere are four output files, still in FASTQ format:\n\n\n\n\nR1 reads that have a pair in the R2 file\n\n\nR2 reads that have a pair in the R1 file\n\n\nR1 reads with no pair (R2 match was low quality: deleted)\n\n\nR2 reads with no pair (R1 match was low quality: deleted)\n\n\n\n\nExamine each file with the eye icon. Look for:\n\n\n\n\nNumber of reads orphaned by the trimming / cleanup process.\n\n\nNumber of pairs lost totally.\n\n\n\n\nWhat next?\n\n\nNext: use the output FASTQ files for Assembly, e.g. with \nSpades",
            "title": "Read trimming"
        },
        {
            "location": "/modules/trimmomatic/#trimming-reads",
            "text": "",
            "title": "Trimming reads"
        },
        {
            "location": "/modules/trimmomatic/#introduction",
            "text": "After checking your input sequence reads for quality (e.g. using FastQC) it might be necessary to trim the reads. Here we will use the Trimmomatic tool. For more inforamtion, see the Trimmomatic  webpage  and the  manual.",
            "title": "Introduction"
        },
        {
            "location": "/modules/trimmomatic/#learning-objectives",
            "text": "At the end of this tutorial you should be able to:   input sequence reads to Trimmomatic  trim using appropriate parameters, and  examine the output trimmed reads.",
            "title": "Learning Objectives"
        },
        {
            "location": "/modules/trimmomatic/#start",
            "text": "open your Galaxy instance  find your quality-checked Illumina sequence reads  e.g.  mutant_R1.fastq  and  mutant_R2.fastq  We want to trim the parts of the reads that are of low quality  based on the FastQC results, we might want to trim the reads like this:  trim Illumina adapters  leading and trailing bases - trim if quality is below 15  sliding window - trim once average quality is below 20",
            "title": "Start"
        },
        {
            "location": "/modules/trimmomatic/#trimmomatic-functions",
            "text": "Adapter trimming   This function trims adapters, barcodes and other contaminants from the reads.  You need to supply a FASTA file of possible adapter sequences, barcodes etc to trim. See Trimmomatic website for detailed instructions.  The default quality settings are sensible.  This should always be the first trimming step if it is used.     Sliding window trimming   This function uses a sliding window to measure average quality and trims accordingly.  The default quality parameters are sensible for this step.     Trailing bases quality trimming   This function trims bases from the end of a read if they drop below a quality threshold. e.g. If base 69 of 75 drops below the threshold, the read is cut to 68 bases.  Use FastQC report to decide whether this step is warranted and what quality value to use. A quality threshold value of 10-15 is a good starting point.     Leading bases quality trimming   This function works in a similar fashion to trailing bases trimming except it performs it at the start of the reads.  Use FastQC report to determine if this step is warranted. If the quality of bases is poor at the beginning of reads it might be necessary.     Minimum read length   Once all trimming steps are complete, this function makes sure that the reads are still longer than this value. If not, the read is removed from the file and its pair is put into the orphan file.  The most appropriate value for this parameter will depend on the FastQC report, specifically the length of the high quality section of the Per Base Sequence Quality graph.     Each read library should be trimmed separately with parameters dependent on their own FastQC reports.",
            "title": "Trimmomatic functions"
        },
        {
            "location": "/modules/trimmomatic/#run-trimmomatic",
            "text": "Go to  Tools \u2192 NGS Analysis \u2192 NGS: QC and manipulation \u2192 Trimmomatic .  Input FASTQ file (R1/first of pair) :  mutant_R1.fastq  Input FASTQ file (R2/second of pair) :  mutant_R2.fastq  Perform initial ILLUMINACLIP step  :  Yes \n<!\u2014  Adapter sequences to use : FIXME\n\u2014>  How accurate the match between the two \u2018adapter ligated\u2019 reads must be for PE palindrome read alignment : 40  How accurate the match between any adapter etc. sequence must be against a read : 15  leave the first  Trimmomatic Operation  as is  click on  + Insert Trimmomatic Operation  Select Trimmomatic operation to perform :  Cut bases off the start of a read, if below a threshold quality (LEADING)  Minimum quality required to keep a base : 15  click on  + Insert Trimmomatic Operation  Select Trimmomatic operation to perform :  Cut bases off the end of a read, if below a threshold quality (TRAILING)  Minimum quality required to keep a base : 15  click  Execute",
            "title": "Run Trimmomatic"
        },
        {
            "location": "/modules/trimmomatic/#examine-output",
            "text": "Trimmomatic should produce 2 pairs files (1 left and 1 right hand end) and 1 or 2 single \u201corphaned reads\u201d files.  The output files are the ones you should use for assembly.  There are four output files, still in FASTQ format:   R1 reads that have a pair in the R2 file  R2 reads that have a pair in the R1 file  R1 reads with no pair (R2 match was low quality: deleted)  R2 reads with no pair (R1 match was low quality: deleted)   Examine each file with the eye icon. Look for:   Number of reads orphaned by the trimming / cleanup process.  Number of pairs lost totally.",
            "title": "Examine output"
        },
        {
            "location": "/modules/trimmomatic/#what-next",
            "text": "Next: use the output FASTQ files for Assembly, e.g. with  Spades",
            "title": "What next?"
        },
        {
            "location": "/modules/workflows/",
            "text": "Galaxy workflows\n\n\nThis tutorial assumes you have used Galaxy before.\n\n\nAlthough we can use tools in Galaxy to analyse data and create a history, there is also a way to create a workflow of files, tools, settings and outputs. You can then input different datasets and run the workflow.\n\n\nThis tutorial covers building a workflow to analyse a bacterial genome, from input Fastq sequencing reads to assembly, annotation, and visualization.\n\n\nStart\n\n\nGo to your Galaxy instance and Register/Login.\n\n\nImport a history of data files:\n\n\n\n\nClick on the \nHistory\n cog \n\n\nSelect \nImport from File\n\n\nIn the box called \nArchived History URL\n, paste in this link address to the Galaxy history of input files:\n\n\n\n\nhttps://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/Microbial_tutorials/Galaxy_history_input_files.tar.gz\n\n\n\n\nClick \nSubmit\n\n\nWait a few seconds.\n\n\nClick on the \u201cView all histories\u201d button \n\n\nSee if the Galaxy history has been imported: it will be called \nimported from archive: Data\n\n\nAbove that pane, click on the \nSwitch to\n button.\n\n\nThen click \nDone\n (in the top left corner).\n\n\n\n\nYou should now have a list of five files in your current history.\n\n\n\n\n\n\nRe-name this history \u201cWorkflows\u201d.\n\n\n\n\n\n\nBuild a workflow\n\n\nWe will first write a workflow for genome assembly.\n\n\n\n\nIn the top menu bar in Galaxy, click on \u201cWorkflow\u201d.\n\n\n\n\n\n\n\n\nClick on \nCreate new workflow\n\n\n\n\n\n\n\n\n\n\nUnder \nWorkflow Name:\n put in \u201cReads to Annotation\u201d.\n\n\n\n\n\n\nClick \nCreate\n\n\n\n\n\n\nThis will bring up the \u201cWorkflow Canvas\u201d, a grid where you can arrange the workflow.\n\n\n\n\n\n\nAdd inputs\n\n\n\n\n\n\nIn the Tools panel, click \nInputs: Input datset\n twice (at the very top of the list).\n\n\n\n\n\n\nA box will appear: drag it to the left and there will be another box underneath it. Drag this also to the left. Your workflow canvas should look like this:\n\n\n\n\n\n\n\n\n\n\nClick on the first box. Look in the right hand panel (now called \u201cDetails\u201d) and change the name of the Input dataset to \nR1.fastq\n. Press Enter for the change to be saved.\n\n\n\n\n\n\n\n\nRepeat for the second input dataset box, naming that one \nR2.fastq\n.\n\n\n\n\nAdd the tool \u201cspades\u201d\n\n\n\n\nIn the tools panel, click on \nNGS Analysis: NGS Assembly: spades\n.\nThis puts the spades box onto the workflow canvas.\n\n\n\n\n\n\n\n\n\n\nClick on the spades box and look in the Details pane on the right. This shows all the options in spades. Choose:\n\n\n\n\n\n\nRun only Assembly\n: \nYes\n [the \nYes\n button should be darker grey]\n\n\n\n\nKmers to use separated by commas:\n \n33,55,91\n  [note: no spaces]  \n\n\nCoverage cutoff:\n \nauto\n  \n\n\n\n\nJoin inputs to the tool\n\n\nNow tell spades which input files to use.\n\n\n\n\n\n\nLook at the input dataset box called \nR1.fastq\n and find the small arrow: >\n\n\n\n\n\n\nClick on this and drag the arrow over to the spades box input arrow > next to \u201cLibraries 1 > Files 1 > Forward reads\u201d.\n\n\n\n\n\n\n\n\n\n\nRepeat for the dataset box \nR2.fastq\n, joining to the spades box next to \u201cLibraries 1 > Files 1 > Reverse reads\u201d.\n\n\n\n\nSave it and run\n\n\n\n\nClick on the cog at the top right of the workflow canvas and \u201cSave\u201d.\n\n\n\n\n\n\n\n\n\n\nClick the cog again and choose \u201cRun\u201d.\n\n\n\n\n\n\nThis brings up a window where you specify the input datasets to use in the workflow.\n\n\n\n\nUnder \nStep1: Input dataset\n choose \nmutant_R1.fastq\n.\n\n\nUnder \nStep2: Input dataset\n choose \nmutant_R2.fastq\n.\n\n\n\n\n\n\n\n\nClick \nRun workflow\n.\n\n\n\n\n\n\nThis will run the workflow (spades) and save the output to the top of your current history in the right hand panel.\n\n\n\n\nView some of the output files with the eye icon to check that the workflow (in this case, just spades) ran correctly.\n\n\n\n\nAdd to the worfklow\n\n\nWe will add another tool to the workflow.\n\n\n\n\n\n\nGo to the top Galaxy panel and click \u201cWorkflow\u201d.\n\n\n\n\n\n\nYour workflow \nReads to Annotation\n should be in the list. Click on the drop-down arrow next to this workflow and choose \nEdit\n.\n\n\n\n\n\n\nThis will bring up the Workflow Canvas where we can add more inputs and tools.\n\n\n\n\n\n\nIn the Tools panel, click on \nNGS Annotation: Prokka\n. This will add a Prokka box to the workflow canvas.\n\n\n\n\n\n\nWe need to tell Prokka which genome assembly) to annotate. Join the spades output called \nout_contigs(fasta)\n to the Prokka input called \nContigs to annotate\n.\n\n\n\n\n\n\n\n\n\n\n\n\nClick on the Prokka box and change some of the settings in the right hand Details panel:\n\n\n\n\nSet the following parameters (leave everything else unchanged):\n\n\nLocus tag prefix (\u2013locustag)\n: P\n\n\nForce GenBank/ENA/DDJB compliance (\u2013compliant)\n: \nNo\n\n\nSequencing Centre ID (\u2013centre)\n: V\n\n\nUse genus-specific BLAST database\n \nNo\n  \n\n\n\n\n\n\n\n\nClick on the cog to the top right of the workflow canvas to save.\n\n\n\n\n\n\nClick on the cog again to run.\n\n\n\n\nAgain, choose the input files: \nmutant_R1.fastq\n and \nmutant_R2.fastq\n, and then click \nRun workflow\n.\n\n\n\n\n\n\n\n\nThe output from the workflow (files from spades and prokka) will appear at the top of the History panel.\n\n\n\n\n\n\nClick on the eye icon for some files to verify the workflow ran correctly.      \n\n\n\n\n\n\nAdd more to the workflow\n\n\nWe will add a visualization tool to view the genome annotation.\n\n\n\n\n\n\nGo to the top Galaxy panel and click \u201cWorkflow\u201d.\n\n\n\n\n\n\nYour workflow \nReads to Annotation\n should be in the list. Click on the drop-down arrow next to this workflow and choose \nEdit\n.\n\n\n\n\n\n\nThis will bring up the Workflow Canvas where we can add more inputs and tools.\n\n\n\n\n\n\nIn the Tools panel, click on \nStatistics and Visualisation: Graph/Display Data: JBrowse\n. This will add a JBrowse box to the workflow canvas.\n\n\n\n\n\n\nClick on the JBrowse box. In the Details pane:\n\n\n\n\n\n\nUnder \nJBrowse-in-Galaxy Action\n choose \nNew JBrowse Instance\n.\n\n\n\n\n\n\nUnder \nReference genome to display\n choose \nUse a genome from history\n.\n\n\n\n\n\n\nFor \nProduce a Standalone Instance\n select \nYes\n.\n\n\n\n\n\n\nFor \nGenetic Code\n choose \n11: The Bacterial, Archaeal and Plant Plastid Code\n.\n\n\n\n\n\n\nClick \nInsert Track Group\n\n\n\n\n\n\nUnder \nTrack Category\n type in \ngene annotations\n.\n\n\n\n\n\n\nClick \nInsert Annotation Track\n\n\n\n\n\n\nFor \nTrack Type\n choose \nGFF/GFF3/BED/GBK Features\n\n\n\n\n\n\nUnder \nJBrowse Track Type[Advanced]\n select \nCanvas Features\n.\n\n\n\n\n\n\nClick on \nJBrowse Styling Options \n\n\n\n\n\n\nUnder \nJBrowse style.label\n correct the word \u201cprodcut\u201d to \u201cproduct\u201d.\n\n\n\n\n\n\nUnder \nTrack Visibility\n choose \nOn for new users\n.\n\n\n\n\n\n\n\n\n\n\nNow we need to tell JBrowse the input files to use.\n\n\n\n\n\n\nJoin the Prokka output \nout_fna (fasta)\n to the JBrowse input \nFasta sequences\n\n\n\n\n\n\nJoin the Prokka output \nout_gff (gff)\n to the JBrowse input \nTrack Group 1\u2026\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nClick on the cog to save; again to run; choose input files; \nRun workflow\n; examine output files in current history.\n\n\n\n\n\n\nThe workflow will now assemble and annotate the genome, and create a JBrowse view of the annotations.\n\n\n\n\n\n\nJBrowse will produce one output file.\n\n\n\n\nClick on the eye icon to view.\n\n\nIn the centre drop down box, choose contig 6.\n\n\nUnder \u201cAvailable Tracks\u201d on the left, tick the boxes.\n\n\nZoom in and out with the plus and minus icons.\n\n\nThe blue blocks are the genome annotations.\n\n\n\n\n\n\n\n\n\n\n\n\n\nSummary\n\n\n\n\n\n\nOur workflow is now:\n\n\n\n\nFastq\n sequence reads to Spades for assembly\n\n\nSpades \ncontigs fasta file\n to Prokka for annotation\n\n\nProkka \nfasta file\n and \n.gff file\n to JBrowse for visualisation.\n\n\n\n\n\n\n\n\nWe can re-run this workflow with different input Fastq files.\n\n\n\n\n\n\nOther workflow options\n\n\nSaving outputs\n\n\nTo save only some output files:\n\n\n\n\nGo to the workflow canvas.\n\n\nFind the star next to the outputs.\n\n\nClick on the star for any outputs you want to save.\n\n\n\n\n\n\nTo save these starred files from the workflow output as a new history:\n\n\n\n\nBefore you click \nRun workflow\n, tick the box above to \nSend results to a new history\n.\n\n\n\n\nImport a workflow\n\n\nTo import an existing Galaxy Workflow:\n\n\n\n\nGo to the Workflow tab in the top panel.\n\n\nAt the top right, click on \nUpload or import workflow\n.\n\n\n\n\nExtract a workflow\n\n\nYou can extract a workflow from an existing Galaxy history.\n\n\n\n\nGo to your Galaxy history\n\n\nClick on the History cog icon and choose \u201cExtract Workflow\u201d.\n\n\nGive it a name and click \nCreate Workflow\n.\n\n\nTo edit, go to the Workflow tab, select the workflow, and choose \u201cEdit\u201d from the drop down menu. You can then edit the steps on the Workflow Canvas.\n\n\n\n\nA note on workflow tabs\n\n\nWe have been using the top Workflow tab. There is another tab at the bottom of the tool panel called Workflows. Click on \nWorkflows: All Workflows\n. This gives a similar view with a list of workflows, and you can also click on the top right tab \u201cswitch to workflow management view\u201d.\n\n\nTo return to the main Galaxy window click on the Analyze Data tab in the top panel.\n\n\nLinks\n\n\nIntroduction to workflows:\n\nhttps://wiki.galaxyproject.org/Learn/AdvancedWorkflow\n\n\nAnother tutorial on workflows:\n\nhttp://vlsci.github.io/lscc_docs/tutorials/galaxy-workflows/galaxy-workflows/\n\n\nGalaxy published workflows:\n\nhttps://usegalaxy.org/workflow/list_published",
            "title": "Galaxy workflows"
        },
        {
            "location": "/modules/workflows/#galaxy-workflows",
            "text": "This tutorial assumes you have used Galaxy before.  Although we can use tools in Galaxy to analyse data and create a history, there is also a way to create a workflow of files, tools, settings and outputs. You can then input different datasets and run the workflow.  This tutorial covers building a workflow to analyse a bacterial genome, from input Fastq sequencing reads to assembly, annotation, and visualization.",
            "title": "Galaxy workflows"
        },
        {
            "location": "/modules/workflows/#start",
            "text": "Go to your Galaxy instance and Register/Login.  Import a history of data files:   Click on the  History  cog   Select  Import from File  In the box called  Archived History URL , paste in this link address to the Galaxy history of input files:   https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/Microbial_tutorials/Galaxy_history_input_files.tar.gz   Click  Submit  Wait a few seconds.  Click on the \u201cView all histories\u201d button   See if the Galaxy history has been imported: it will be called  imported from archive: Data  Above that pane, click on the  Switch to  button.  Then click  Done  (in the top left corner).   You should now have a list of five files in your current history.    Re-name this history \u201cWorkflows\u201d.",
            "title": "Start"
        },
        {
            "location": "/modules/workflows/#build-a-workflow",
            "text": "We will first write a workflow for genome assembly.   In the top menu bar in Galaxy, click on \u201cWorkflow\u201d.     Click on  Create new workflow      Under  Workflow Name:  put in \u201cReads to Annotation\u201d.    Click  Create    This will bring up the \u201cWorkflow Canvas\u201d, a grid where you can arrange the workflow.",
            "title": "Build a workflow"
        },
        {
            "location": "/modules/workflows/#add-inputs",
            "text": "In the Tools panel, click  Inputs: Input datset  twice (at the very top of the list).    A box will appear: drag it to the left and there will be another box underneath it. Drag this also to the left. Your workflow canvas should look like this:      Click on the first box. Look in the right hand panel (now called \u201cDetails\u201d) and change the name of the Input dataset to  R1.fastq . Press Enter for the change to be saved.     Repeat for the second input dataset box, naming that one  R2.fastq .",
            "title": "Add inputs"
        },
        {
            "location": "/modules/workflows/#add-the-tool-spades",
            "text": "In the tools panel, click on  NGS Analysis: NGS Assembly: spades .\nThis puts the spades box onto the workflow canvas.      Click on the spades box and look in the Details pane on the right. This shows all the options in spades. Choose:    Run only Assembly :  Yes  [the  Yes  button should be darker grey]   Kmers to use separated by commas:   33,55,91   [note: no spaces]    Coverage cutoff:   auto",
            "title": "Add the tool \"spades\""
        },
        {
            "location": "/modules/workflows/#join-inputs-to-the-tool",
            "text": "Now tell spades which input files to use.    Look at the input dataset box called  R1.fastq  and find the small arrow: >    Click on this and drag the arrow over to the spades box input arrow > next to \u201cLibraries 1 > Files 1 > Forward reads\u201d.      Repeat for the dataset box  R2.fastq , joining to the spades box next to \u201cLibraries 1 > Files 1 > Reverse reads\u201d.",
            "title": "Join inputs to the tool"
        },
        {
            "location": "/modules/workflows/#save-it-and-run",
            "text": "Click on the cog at the top right of the workflow canvas and \u201cSave\u201d.      Click the cog again and choose \u201cRun\u201d.    This brings up a window where you specify the input datasets to use in the workflow.   Under  Step1: Input dataset  choose  mutant_R1.fastq .  Under  Step2: Input dataset  choose  mutant_R2.fastq .     Click  Run workflow .    This will run the workflow (spades) and save the output to the top of your current history in the right hand panel.   View some of the output files with the eye icon to check that the workflow (in this case, just spades) ran correctly.",
            "title": "Save it and run"
        },
        {
            "location": "/modules/workflows/#add-to-the-worfklow",
            "text": "We will add another tool to the workflow.    Go to the top Galaxy panel and click \u201cWorkflow\u201d.    Your workflow  Reads to Annotation  should be in the list. Click on the drop-down arrow next to this workflow and choose  Edit .    This will bring up the Workflow Canvas where we can add more inputs and tools.    In the Tools panel, click on  NGS Annotation: Prokka . This will add a Prokka box to the workflow canvas.    We need to tell Prokka which genome assembly) to annotate. Join the spades output called  out_contigs(fasta)  to the Prokka input called  Contigs to annotate .       Click on the Prokka box and change some of the settings in the right hand Details panel:   Set the following parameters (leave everything else unchanged):  Locus tag prefix (\u2013locustag) : P  Force GenBank/ENA/DDJB compliance (\u2013compliant) :  No  Sequencing Centre ID (\u2013centre) : V  Use genus-specific BLAST database   No        Click on the cog to the top right of the workflow canvas to save.    Click on the cog again to run.   Again, choose the input files:  mutant_R1.fastq  and  mutant_R2.fastq , and then click  Run workflow .     The output from the workflow (files from spades and prokka) will appear at the top of the History panel.    Click on the eye icon for some files to verify the workflow ran correctly.",
            "title": "Add to the worfklow"
        },
        {
            "location": "/modules/workflows/#add-more-to-the-workflow",
            "text": "We will add a visualization tool to view the genome annotation.    Go to the top Galaxy panel and click \u201cWorkflow\u201d.    Your workflow  Reads to Annotation  should be in the list. Click on the drop-down arrow next to this workflow and choose  Edit .    This will bring up the Workflow Canvas where we can add more inputs and tools.    In the Tools panel, click on  Statistics and Visualisation: Graph/Display Data: JBrowse . This will add a JBrowse box to the workflow canvas.    Click on the JBrowse box. In the Details pane:    Under  JBrowse-in-Galaxy Action  choose  New JBrowse Instance .    Under  Reference genome to display  choose  Use a genome from history .    For  Produce a Standalone Instance  select  Yes .    For  Genetic Code  choose  11: The Bacterial, Archaeal and Plant Plastid Code .    Click  Insert Track Group    Under  Track Category  type in  gene annotations .    Click  Insert Annotation Track    For  Track Type  choose  GFF/GFF3/BED/GBK Features    Under  JBrowse Track Type[Advanced]  select  Canvas Features .    Click on  JBrowse Styling Options     Under  JBrowse style.label  correct the word \u201cprodcut\u201d to \u201cproduct\u201d.    Under  Track Visibility  choose  On for new users .      Now we need to tell JBrowse the input files to use.    Join the Prokka output  out_fna (fasta)  to the JBrowse input  Fasta sequences    Join the Prokka output  out_gff (gff)  to the JBrowse input  Track Group 1\u2026         Click on the cog to save; again to run; choose input files;  Run workflow ; examine output files in current history.    The workflow will now assemble and annotate the genome, and create a JBrowse view of the annotations.    JBrowse will produce one output file.   Click on the eye icon to view.  In the centre drop down box, choose contig 6.  Under \u201cAvailable Tracks\u201d on the left, tick the boxes.  Zoom in and out with the plus and minus icons.  The blue blocks are the genome annotations.",
            "title": "Add more to the workflow"
        },
        {
            "location": "/modules/workflows/#summary",
            "text": "Our workflow is now:   Fastq  sequence reads to Spades for assembly  Spades  contigs fasta file  to Prokka for annotation  Prokka  fasta file  and  .gff file  to JBrowse for visualisation.     We can re-run this workflow with different input Fastq files.",
            "title": "Summary"
        },
        {
            "location": "/modules/workflows/#other-workflow-options",
            "text": "",
            "title": "Other workflow options"
        },
        {
            "location": "/modules/workflows/#saving-outputs",
            "text": "To save only some output files:   Go to the workflow canvas.  Find the star next to the outputs.  Click on the star for any outputs you want to save.    To save these starred files from the workflow output as a new history:   Before you click  Run workflow , tick the box above to  Send results to a new history .",
            "title": "Saving outputs"
        },
        {
            "location": "/modules/workflows/#import-a-workflow",
            "text": "To import an existing Galaxy Workflow:   Go to the Workflow tab in the top panel.  At the top right, click on  Upload or import workflow .",
            "title": "Import a workflow"
        },
        {
            "location": "/modules/workflows/#extract-a-workflow",
            "text": "You can extract a workflow from an existing Galaxy history.   Go to your Galaxy history  Click on the History cog icon and choose \u201cExtract Workflow\u201d.  Give it a name and click  Create Workflow .  To edit, go to the Workflow tab, select the workflow, and choose \u201cEdit\u201d from the drop down menu. You can then edit the steps on the Workflow Canvas.",
            "title": "Extract a workflow"
        },
        {
            "location": "/modules/workflows/#a-note-on-workflow-tabs",
            "text": "We have been using the top Workflow tab. There is another tab at the bottom of the tool panel called Workflows. Click on  Workflows: All Workflows . This gives a similar view with a list of workflows, and you can also click on the top right tab \u201cswitch to workflow management view\u201d.  To return to the main Galaxy window click on the Analyze Data tab in the top panel.",
            "title": "A note on workflow tabs"
        },
        {
            "location": "/modules/workflows/#links",
            "text": "Introduction to workflows: https://wiki.galaxyproject.org/Learn/AdvancedWorkflow  Another tutorial on workflows: http://vlsci.github.io/lscc_docs/tutorials/galaxy-workflows/galaxy-workflows/  Galaxy published workflows: https://usegalaxy.org/workflow/list_published",
            "title": "Links"
        },
        {
            "location": "/modules/viral_genomes/",
            "text": "Viral Genome Sequencing\n\n\nThis tutorial is about determining the genome sequence of a virus, using comparisons to a reference sequence.\n\n\nBackground\n\n\nMurray Valley encephalitis virus is classified as part of the Flavivirus genus of viruses, all of which are positive strand RNA viruses. The type species for this genus is yellow fever virus, and the genus includes dengue virus, west nile virus and zika virus.\n\n\nViruses from this genus have a single-segment genome of about 11 kb. Within this, there is a 10 kb open reading frame that encodes a polyprotein. Following translation, this protein is modified to yield the various, mature structural and non-structural viral proteins as illustrated in Fig. 1.\n\n\n\n\nFig. 1 - An overview of a typical flavivirus genome and the viral proteins that are part of the viral polyprotein (from \nViralzone\n).\n\n\nThere are 14 complete Murray Valley encephalitis virus genome sequences available at NCBI Viral Genomes.\n\n\n\n\nGo to NCBI \nViral Genomes\n.\n\n\nSelect \nBrowse viral genomes by family\n and click on the family \nFlaviviridae\n: \nComplete Genomes\n\n\nNote: you may have to widen your screen to see all the columns of viral family names.\n\n\n\n\n\n\n\n\nLook at the row for Murray Valley encephelitis virus. In the Neigbours column, we can see there are 14.\n\n\n\n\n\n\n\nIn this tutorial we will use the prototype strain 1-151 as the reference genome sequence.\n\n\n\n\nThis strain was isolated in the early 1950s - see \nAF161266\n.\n\n\n\n\n\n\n\nThe isolate we are looking at has been sequenced using the Illumina platform.\n\n\n\n\nThe genomic cDNA was prepared using random hexamers to prime the reverse transcription of the viral genomic RNA.\n\n\nAfter second strand synthesis, the cDNA was used to prepare an Illumina sequencing library and run on an Illumina MiSeq instrument.\n\n\n\n\nIn this activity we will use a read mapping approach to determine the sequence of a new Murray Valley encephalitis virus isolate.\n\n\nImport data\n\n\nSection overview:\n\n\n\n\nLog in to your Galaxy server\n\n\nImport files required for the activity\n\n\nView imported files\n\n\n\n\nGo to the Galaxy Page\n\n\n\n\nWeb address: \nhttp://phln.genome.edu.au/galaxy\n\n\nRemind me how to logon\n\n\n\n\nImport files to Galaxy\n\n\n\n\nClick on the \nAnalyze Data\n menu at the top of the page.\n\n\nClick on the \nHistory\n menu button (the \n on the top right of the history pane)\n\n\nClick \nImport from File\n (at the bottom of the list)\n\n\nA new page will appear with a text box for the URL of the history to import.\n\n\nCopy the following URL into the text box:\n\n\n\n\nhttp://phln.genome.edu.au/public/dieter/Galaxy-History-MVEVmapping.tar.gz\n\n\n\n\n\n\nClick \nSubmit\n\n\n\n\nGalaxy will download the data files from the internet and will be available as an additional history (takes about one minute).\n\n\n\n\nTo make the newly imported history appear as the current history:\n\n\n\n\nClick on the View all Histories button (the \n on the top right of the history pane.)\n\n\nIf the history has finished downloading it will appear with the title:\n\n\n\u201cimported from archive: MVEVmapping\u201c\n\n\nClick on the \nSwitch to\n button above this history and then the \nDone\n button.\n\n\n\n\nYou should now have 4 files in the history pane as follows:\n\n\n\n\nReference sequence files \n :\n\n\n\n\nMVEV.gbk\n - genbank format\n\n\nMVEV.fna\n - fasta format\n\n\n\n\nIllumina sequence reads (R1 and R2) from the new isolate:\n\n\n\n\nMVE_R1.fq\n - forward reads\n\n\nMVE_R2.fq\n - reverse reads\n\n\n\n\nSnippy\n\n\nSection overview:\n\n\n\n\nFind variants in the isolate using the tool Snippy.\n\n\n\n\nSnippy is a fast variant caller for haploid genomes. The software is available on GitHub at \nhttps://github.com/tseemann/snippy\n. For this activity, we are using Snippy as installed on Galaxy.\n\n\nPreliminary Activity\n\n\n\n\n\n\nRun FastQC: How many reads in in each of the fastq files \nMVE_R1.fq\n and \nMVE_R2.fq\n?\n\n\n\n\n\n\nMVEV.fna\n and \nMVEV.gbk\n each contain the genome sequence of Murray Valley encephalitis virus strain 1-151 - how many bases in the genome? (Hint: use Fasta Statistics)\n\n\n\n\n\n\nRunning Snippy\n\n\nSnippy maps reads from the new Murray Valley encephalitis virus isolate (the \nMVE_R1.fq\n and \nMVE_R2.fq\n reads) onto the genome sequence of Murray Valley encephalitis virus strain 1-151 (\nMVEV.fna\n). \n\n\n\n\nFind Snippy in the tool menu (in  NGS: Variant Analysis)\n\n\nSelect appropriate files (see screenshot below) and Execute (use default settings).\n\n\n\n\n\n\nOutput\n\n\nFiles cataloging SNP differences:\n\n\n\n\n9: \nsnippy on data 4, data 3, and data 2 snps vcf file\n\n\n10: \nsnippy on data 4, data 3, and data 2 snps gff file\n\n\n11: \nsnippy on data 4, data 3, and data 2 snps table\n\n\n12: \nsnippy on data 4, data 3, and data 2 snps summary\n\n\n\n\nA log of the progress of the run:\n\n\n\n\n13: \nsnippy on data 4, data 3, and data 2 log file\n\n\n\n\nRegions where reads aligned (NNNN \u2014, indicate regions where there was low or no read data):\n\n\n\n\n14: \nsnippy on data 4, data 3, and data 2 aligned fasta\n\n\n\n\nA consensus genome sequence for the new isolate:\n\n\n\n\n15: \nsnippy on data 4, data 3, and data 2 consensus fasta\n\n\n\n\nSummary of the read depth:\n\n\n\n\n16: \nsnippy on data 4, data 3, and data 2 mapping depth\n\n\n\n\nA compressed version of the above files (and more that can be downloaded):\n\n\n\n\n17: \nsnippy on data 4, data 3, and data 2 out dir\n\n\n\n\nDownload these files to your local computer (click on the file name and then the disk icon in the lower left hand corner):\n\n\n\n\n17: \nsnippy on data 4, data 3, and data 2 out dir\n (and unzip)\n\n\n2: \nMVEV.gbk\n\n\n1: \nMVEV.fna\n\n\n\n\nAlso download these bam files from these URLs (open each URL in a new tab and the file should download automatically):\n\n\n\n\nhttp://phln.genome.edu.au/public/dieter/snps.bam\n\n\nhttp://phln.genome.edu.au/public/dieter/snps.bam.bai\n\n\nhttp://phln.genome.edu.au/public/dieter/snps.depth.gz\n\n\nhttp://phln.genome.edu.au/public/dieter/snps.depth.gz.tbi\n\n\n\n\nNote: if you have previously downloaded these files, the new downloads may be renamed. Remove any spaces in the names.\n\n\n\n\n\nArtemis\n\n\nSection overview:\n\n\n\n\nView the reads from the new isolate mapped against the reference sequence, using the tool Artemis.\n\n\n\n\nArtemis is a tool to view genome sequences and mapped reads, including variants (SNPs).\n\n\nIf Artemis is not installed, go to \nhttp://www.sanger.ac.uk/science/tools/artemis\n.\n\n\nView the reference sequence\n\n\n\n\nOpen Artemis.\n\n\nGo to \nFile: Open\n and select \nMVEV.gbk\n. The file will probably have a \u201cGalaxy\u201d prefix, e.g. \nGalaxy2-[MVEV.gbk].genbank\n.\n\n\n\n\nThe Artemis window:\n\n\n\n\npanes 1 and 2 are the same, but can be scaled differently\n\n\neach pane has the double-stranded sequence in the centre, with amino acid translations above and below\n\n\nthere is a third lower pane with feature information\n\n\ncoding sequences are highlighted in blue\n\n\nother features are highlighted in green\n\n\nclicking on one of these will select it in all panels\n\n\nblack vertical lines are stop codons (when zoomed out)\n\n\nmove left and right with horizontal scroll bar\n\n\nzoom in and out with right-hand scroll bar\n\n\n\n\n\n\nAdd a plot\n\n\n\n\nGo to \nGraph: Add User Plot\n, select \nsnps.depth.gz\n\n\nA graph should display at the top of the screen \n\n\n\n\n\n\n\n\n\nProducing a draft genome sequence\n\n\nSection overview:\n\n\n\n\nProduce draft genome sequence for the new viral isolate.\n\n\n\n\nExamine the mapped reads\n\n\n\n\n\nWhat is the minimum read depth used by Snippy to call a SNP?\n\n\n\n\nHint: Go back to Snippy on Galaxy - look at the information below the \u2018Execute\u2019 button\n\n\n\n\nWould Snippy call a SNP at positions 1 \u2192 5 ?\n\n\nWhat is the maximum read depth?\n\n\nWhat do we know about the sequence of the new isolate in the regions where there is low read coverage?\n\n\n\n\n\n\n\nUnzip \n17: snippy on data 4, data 3, and data 2 out dir\n\n\n\n\nThis makes an \u201cout\u201d folder containing some files including the consensus file.\n\n\n\n\n\n\nIn Artemis, open \nsnps.consensus.fa\n\n\n\n\n\n\nThis is a file that is based on the reference sequence and includes any confirmed SNPs called by Snippy.\n\n\nIf we were going to use this sequence to produce the draft sequence of the new isolate, what bases would you have at positions 1\u2192 5?\n\n\nGetting an Overview of the Difference between strain 1-151 and our new isolate\n\n\nSimplest overview: view the bam file with Artemis\n\n\nOpen \nMVEV.gbk\n in Artemis and load the \nsnps.bam\n via the File menu to \u201cRead BAM / VCF\u201d\n\n\nOnce loaded, differences between reads and the reference sequence can be highlighted by right/command click in the bam view window. Select \u2018Show > SNP marks\u2019.\n\n\n\n\nGetting more detail: looking at the table of SNPs\n\n\nLocated in the out folder there is a html file that contains a table with information about each of the SNPs called by Snippy.\n\n\nIncluded in the table is a column that provides a prediction about the impact each SNP will have on annotated protein coding regions. The genbank file provides the annotation information used by Snippy to make the predictions.\n\n\nA total of 790 SNP differences were call by Snippy\n\n\nOpen snps.html in your web browser\n\n\n\n\n\nSummary: 663/790 SNPs do not result a difference in the encoded polyprotein\n\n\nIs this pattern of variable genome sequence and more conserved protein sequence normal in viruses? What might be the cause?",
            "title": "Viral genome sequencing"
        },
        {
            "location": "/modules/viral_genomes/#viral-genome-sequencing",
            "text": "This tutorial is about determining the genome sequence of a virus, using comparisons to a reference sequence.",
            "title": "Viral Genome Sequencing"
        },
        {
            "location": "/modules/viral_genomes/#background",
            "text": "Murray Valley encephalitis virus is classified as part of the Flavivirus genus of viruses, all of which are positive strand RNA viruses. The type species for this genus is yellow fever virus, and the genus includes dengue virus, west nile virus and zika virus.  Viruses from this genus have a single-segment genome of about 11 kb. Within this, there is a 10 kb open reading frame that encodes a polyprotein. Following translation, this protein is modified to yield the various, mature structural and non-structural viral proteins as illustrated in Fig. 1.   Fig. 1 - An overview of a typical flavivirus genome and the viral proteins that are part of the viral polyprotein (from  Viralzone ).  There are 14 complete Murray Valley encephalitis virus genome sequences available at NCBI Viral Genomes.   Go to NCBI  Viral Genomes .  Select  Browse viral genomes by family  and click on the family  Flaviviridae :  Complete Genomes  Note: you may have to widen your screen to see all the columns of viral family names.     Look at the row for Murray Valley encephelitis virus. In the Neigbours column, we can see there are 14.    In this tutorial we will use the prototype strain 1-151 as the reference genome sequence.   This strain was isolated in the early 1950s - see  AF161266 .    The isolate we are looking at has been sequenced using the Illumina platform.   The genomic cDNA was prepared using random hexamers to prime the reverse transcription of the viral genomic RNA.  After second strand synthesis, the cDNA was used to prepare an Illumina sequencing library and run on an Illumina MiSeq instrument.   In this activity we will use a read mapping approach to determine the sequence of a new Murray Valley encephalitis virus isolate.",
            "title": "Background"
        },
        {
            "location": "/modules/viral_genomes/#import-data",
            "text": "",
            "title": "Import data"
        },
        {
            "location": "/modules/viral_genomes/#section-overview",
            "text": "Log in to your Galaxy server  Import files required for the activity  View imported files",
            "title": "Section overview:"
        },
        {
            "location": "/modules/viral_genomes/#go-to-the-galaxy-page",
            "text": "Web address:  http://phln.genome.edu.au/galaxy  Remind me how to logon",
            "title": "Go to the Galaxy Page"
        },
        {
            "location": "/modules/viral_genomes/#import-files-to-galaxy",
            "text": "Click on the  Analyze Data  menu at the top of the page.  Click on the  History  menu button (the   on the top right of the history pane)  Click  Import from File  (at the bottom of the list)  A new page will appear with a text box for the URL of the history to import.  Copy the following URL into the text box:   http://phln.genome.edu.au/public/dieter/Galaxy-History-MVEVmapping.tar.gz    Click  Submit   Galaxy will download the data files from the internet and will be available as an additional history (takes about one minute).",
            "title": "Import files to Galaxy"
        },
        {
            "location": "/modules/viral_genomes/#to-make-the-newly-imported-history-appear-as-the-current-history",
            "text": "Click on the View all Histories button (the   on the top right of the history pane.)  If the history has finished downloading it will appear with the title:  \u201cimported from archive: MVEVmapping\u201c  Click on the  Switch to  button above this history and then the  Done  button.   You should now have 4 files in the history pane as follows:   Reference sequence files   :   MVEV.gbk  - genbank format  MVEV.fna  - fasta format   Illumina sequence reads (R1 and R2) from the new isolate:   MVE_R1.fq  - forward reads  MVE_R2.fq  - reverse reads",
            "title": "To make the newly imported history appear as the current history:"
        },
        {
            "location": "/modules/viral_genomes/#snippy",
            "text": "",
            "title": "Snippy"
        },
        {
            "location": "/modules/viral_genomes/#section-overview_1",
            "text": "Find variants in the isolate using the tool Snippy.   Snippy is a fast variant caller for haploid genomes. The software is available on GitHub at  https://github.com/tseemann/snippy . For this activity, we are using Snippy as installed on Galaxy.",
            "title": "Section overview:"
        },
        {
            "location": "/modules/viral_genomes/#preliminary-activity",
            "text": "Run FastQC: How many reads in in each of the fastq files  MVE_R1.fq  and  MVE_R2.fq ?    MVEV.fna  and  MVEV.gbk  each contain the genome sequence of Murray Valley encephalitis virus strain 1-151 - how many bases in the genome? (Hint: use Fasta Statistics)",
            "title": "Preliminary Activity"
        },
        {
            "location": "/modules/viral_genomes/#running-snippy",
            "text": "Snippy maps reads from the new Murray Valley encephalitis virus isolate (the  MVE_R1.fq  and  MVE_R2.fq  reads) onto the genome sequence of Murray Valley encephalitis virus strain 1-151 ( MVEV.fna ).    Find Snippy in the tool menu (in  NGS: Variant Analysis)  Select appropriate files (see screenshot below) and Execute (use default settings).",
            "title": "Running Snippy"
        },
        {
            "location": "/modules/viral_genomes/#output",
            "text": "Files cataloging SNP differences:   9:  snippy on data 4, data 3, and data 2 snps vcf file  10:  snippy on data 4, data 3, and data 2 snps gff file  11:  snippy on data 4, data 3, and data 2 snps table  12:  snippy on data 4, data 3, and data 2 snps summary   A log of the progress of the run:   13:  snippy on data 4, data 3, and data 2 log file   Regions where reads aligned (NNNN \u2014, indicate regions where there was low or no read data):   14:  snippy on data 4, data 3, and data 2 aligned fasta   A consensus genome sequence for the new isolate:   15:  snippy on data 4, data 3, and data 2 consensus fasta   Summary of the read depth:   16:  snippy on data 4, data 3, and data 2 mapping depth   A compressed version of the above files (and more that can be downloaded):   17:  snippy on data 4, data 3, and data 2 out dir   Download these files to your local computer (click on the file name and then the disk icon in the lower left hand corner):   17:  snippy on data 4, data 3, and data 2 out dir  (and unzip)  2:  MVEV.gbk  1:  MVEV.fna   Also download these bam files from these URLs (open each URL in a new tab and the file should download automatically):   http://phln.genome.edu.au/public/dieter/snps.bam  http://phln.genome.edu.au/public/dieter/snps.bam.bai  http://phln.genome.edu.au/public/dieter/snps.depth.gz  http://phln.genome.edu.au/public/dieter/snps.depth.gz.tbi   Note: if you have previously downloaded these files, the new downloads may be renamed. Remove any spaces in the names.",
            "title": "Output"
        },
        {
            "location": "/modules/viral_genomes/#artemis",
            "text": "",
            "title": "Artemis"
        },
        {
            "location": "/modules/viral_genomes/#section-overview_2",
            "text": "View the reads from the new isolate mapped against the reference sequence, using the tool Artemis.   Artemis is a tool to view genome sequences and mapped reads, including variants (SNPs).  If Artemis is not installed, go to  http://www.sanger.ac.uk/science/tools/artemis .",
            "title": "Section overview:"
        },
        {
            "location": "/modules/viral_genomes/#view-the-reference-sequence",
            "text": "Open Artemis.  Go to  File: Open  and select  MVEV.gbk . The file will probably have a \u201cGalaxy\u201d prefix, e.g.  Galaxy2-[MVEV.gbk].genbank .",
            "title": "View the reference sequence"
        },
        {
            "location": "/modules/viral_genomes/#the-artemis-window",
            "text": "panes 1 and 2 are the same, but can be scaled differently  each pane has the double-stranded sequence in the centre, with amino acid translations above and below  there is a third lower pane with feature information  coding sequences are highlighted in blue  other features are highlighted in green  clicking on one of these will select it in all panels  black vertical lines are stop codons (when zoomed out)  move left and right with horizontal scroll bar  zoom in and out with right-hand scroll bar",
            "title": "The Artemis window:"
        },
        {
            "location": "/modules/viral_genomes/#add-a-plot",
            "text": "Go to  Graph: Add User Plot , select  snps.depth.gz  A graph should display at the top of the screen",
            "title": "Add a plot"
        },
        {
            "location": "/modules/viral_genomes/#producing-a-draft-genome-sequence",
            "text": "",
            "title": "Producing a draft genome sequence"
        },
        {
            "location": "/modules/viral_genomes/#section-overview_3",
            "text": "Produce draft genome sequence for the new viral isolate.",
            "title": "Section overview:"
        },
        {
            "location": "/modules/viral_genomes/#examine-the-mapped-reads",
            "text": "What is the minimum read depth used by Snippy to call a SNP?   Hint: Go back to Snippy on Galaxy - look at the information below the \u2018Execute\u2019 button   Would Snippy call a SNP at positions 1 \u2192 5 ?  What is the maximum read depth?  What do we know about the sequence of the new isolate in the regions where there is low read coverage?    Unzip  17: snippy on data 4, data 3, and data 2 out dir   This makes an \u201cout\u201d folder containing some files including the consensus file.    In Artemis, open  snps.consensus.fa    This is a file that is based on the reference sequence and includes any confirmed SNPs called by Snippy.  If we were going to use this sequence to produce the draft sequence of the new isolate, what bases would you have at positions 1\u2192 5?",
            "title": "Examine the mapped reads"
        },
        {
            "location": "/modules/viral_genomes/#getting-an-overview-of-the-difference-between-strain-1-151-and-our-new-isolate",
            "text": "Simplest overview: view the bam file with Artemis  Open  MVEV.gbk  in Artemis and load the  snps.bam  via the File menu to \u201cRead BAM / VCF\u201d  Once loaded, differences between reads and the reference sequence can be highlighted by right/command click in the bam view window. Select \u2018Show > SNP marks\u2019.",
            "title": "Getting an Overview of the Difference between strain 1-151 and our new isolate"
        },
        {
            "location": "/modules/viral_genomes/#getting-more-detail-looking-at-the-table-of-snps",
            "text": "Located in the out folder there is a html file that contains a table with information about each of the SNPs called by Snippy.  Included in the table is a column that provides a prediction about the impact each SNP will have on annotated protein coding regions. The genbank file provides the annotation information used by Snippy to make the predictions.  A total of 790 SNP differences were call by Snippy  Open snps.html in your web browser   Summary: 663/790 SNPs do not result a difference in the encoded polyprotein  Is this pattern of variable genome sequence and more conserved protein sequence normal in viruses? What might be the cause?",
            "title": "Getting more detail: looking at the table of SNPs"
        },
        {
            "location": "/modules/artemis/",
            "text": "Introduction to Artemis\n\n\nBackground\n\n\nArtemis is a genome browser and annotation tool. Artemis is written in Java and can be used on Mac, Linux or Windows. While it can be used to view any genomic data, it is specifically designed for viewing bacterial or viral genomes. A variety of file types can be loaded and viewed using Artemis; these include FASTA, EMBL, GenBank and GFF3 format files.\n\n\nLearning objectives\n\n\nAt the end of this tutorial, you should be able to:\n\n\n\n\ninstall Artemis on your laptop\n\n\ndownload a bacterial genome sequence, and\n\n\nopen the genome sequence in Artemis and look at the sequence features.\n\n\n\n\nInstall Artemis\n\n\n\n\nArtemis is available at no cost from the Sanger Institute Website.\n\n\nInstructions for downloading and installing Artemis can be found at: \nhttp://www.sanger.ac.uk/science/tools/artemis\n\n\nDownload and run.\n\n\nNot working? The most common problem: Java is either not installed or too old.\n\n\nArtemis needs a recent version of Java v1.6 or higher. Go to \nhttp://java.com\n and update.\n\n\nStill not working? Seek help!\n\n\n\n\nDownload a bacterial genome\n\n\nWe will download the sequence of \nLeptospira borgpetersenii\n serovar Hardjobovis Chromosome II from the NCBI website in GenBank format.  \n\n\n\n\nGo to \nhttp://www.ncbi.nlm.nih.gov\n\n\nSelect the \u201cTaxonomy\u201d database from the list on the left hand side.\n\n\nEnter \u201cLeptospira borgpetersenii\u201d in the search box and click \nSearch\n.\n\n\n\n\n\n\n\n\nClick on the species name:\n\n\n\n\n\n\n\u00a0\n\n\n\n\nClick on the species name again (at the top of the list):\n\n\n\n\n\n\n\u00a0\n\n\n\n\nNext to \nGenome\n, click on the far right number \n1\n.\n\n\n\n\n\n\n\n\n\n\u00a0\n\n\n\n\nClick on \nGenome Assembly and Annotation report\n:\n\n\n\n\n\u00a0\n\n\n\n\n\u00a0\n\n\n\n\nThen, for the first species listed, scroll to the far right of the table, see chromosome 2, and click the link to the annotated assembly number \nNC_008509.1\n (not CP0003):\n\n\n\n\n\n\n\u00a0\n\n\n\n\nThen, click \nSend\n\n\nchoose \nComplete Record\n, \nDestination \u2192 File\n, \nFormat \u2192 GenBank (full)\n\n\nclick \nCreate File\n.\n\n\nNote the download location (e.g. Downloads folder).\n\n\n\n\n\n\n\u00a0\n\n\nOpen the GenBank file in Artemis\n\n\n\n\nOpen Artemis\n\n\n\n\n\n\n\n\nMenu \u2192 File \u2192 Open\n\n\nSelect file from dialog box, and \nOPEN\n\n\n\n\n\n\nThe Artemis interface\n\n\nThere are three main panes:\n\n\n\n\nThe overview\n\n\nThe DNA view\n\n\nText summary of features\n\n\n\n\n\n\nOverview:  \n\n\n\n\n6-frame annotation\n\n\nannotated genome features are highlighted\n\n\nblack lines are stop codons\n\n\n\n\nDNA view:\n\n\n\n\n6-frame translation\n\n\nDNA sequence in the middle\n\n\namino acid translations above and below\n\n\n\n\nText summary:\n\n\n\n\ntext summary of features\n\n\n\n\nNavigation:\n\n\n\n\nGo to the overview pane\n\n\nclick on one annotated feature (highlighted in blue)\n\n\nit will be summarized on the top line (\u201cselected feature\u201d)\n\n\nthe corresponding sequence will be highlighted in the DNA view pane\n\n\nthe corresponding feature will be higlighted in the text summary pane\n\n\nnow double click on the same annotated feature\n\n\nall three panes will be centred for this feature\n\n\nto move left or right, use the horizontal scroll bars under each pane\n\n\nto zoom, use the vertical scroll bars on the right\n\n\n\n\nWhat next\n\n\n\n\n\n\nLinks to more information: \nthe Artemis manual.\n\n\n\n\n\n\nAssemble a bacterial genome using Spades.",
            "title": "Artemis"
        },
        {
            "location": "/modules/artemis/#introduction-to-artemis",
            "text": "",
            "title": "Introduction to Artemis"
        },
        {
            "location": "/modules/artemis/#background",
            "text": "Artemis is a genome browser and annotation tool. Artemis is written in Java and can be used on Mac, Linux or Windows. While it can be used to view any genomic data, it is specifically designed for viewing bacterial or viral genomes. A variety of file types can be loaded and viewed using Artemis; these include FASTA, EMBL, GenBank and GFF3 format files.",
            "title": "Background"
        },
        {
            "location": "/modules/artemis/#learning-objectives",
            "text": "At the end of this tutorial, you should be able to:   install Artemis on your laptop  download a bacterial genome sequence, and  open the genome sequence in Artemis and look at the sequence features.",
            "title": "Learning objectives"
        },
        {
            "location": "/modules/artemis/#install-artemis",
            "text": "Artemis is available at no cost from the Sanger Institute Website.  Instructions for downloading and installing Artemis can be found at:  http://www.sanger.ac.uk/science/tools/artemis  Download and run.  Not working? The most common problem: Java is either not installed or too old.  Artemis needs a recent version of Java v1.6 or higher. Go to  http://java.com  and update.  Still not working? Seek help!",
            "title": "Install Artemis"
        },
        {
            "location": "/modules/artemis/#download-a-bacterial-genome",
            "text": "We will download the sequence of  Leptospira borgpetersenii  serovar Hardjobovis Chromosome II from the NCBI website in GenBank format.     Go to  http://www.ncbi.nlm.nih.gov  Select the \u201cTaxonomy\u201d database from the list on the left hand side.  Enter \u201cLeptospira borgpetersenii\u201d in the search box and click  Search .     Click on the species name:    \u00a0   Click on the species name again (at the top of the list):    \u00a0   Next to  Genome , click on the far right number  1 .     \u00a0   Click on  Genome Assembly and Annotation report :   \u00a0   \u00a0   Then, for the first species listed, scroll to the far right of the table, see chromosome 2, and click the link to the annotated assembly number  NC_008509.1  (not CP0003):    \u00a0   Then, click  Send  choose  Complete Record ,  Destination \u2192 File ,  Format \u2192 GenBank (full)  click  Create File .  Note the download location (e.g. Downloads folder).",
            "title": "Download a bacterial genome"
        },
        {
            "location": "/modules/artemis/#open-the-genbank-file-in-artemis",
            "text": "Open Artemis     Menu \u2192 File \u2192 Open  Select file from dialog box, and  OPEN",
            "title": "Open the GenBank file in Artemis"
        },
        {
            "location": "/modules/artemis/#the-artemis-interface",
            "text": "There are three main panes:   The overview  The DNA view  Text summary of features    Overview:     6-frame annotation  annotated genome features are highlighted  black lines are stop codons   DNA view:   6-frame translation  DNA sequence in the middle  amino acid translations above and below   Text summary:   text summary of features   Navigation:   Go to the overview pane  click on one annotated feature (highlighted in blue)  it will be summarized on the top line (\u201cselected feature\u201d)  the corresponding sequence will be highlighted in the DNA view pane  the corresponding feature will be higlighted in the text summary pane  now double click on the same annotated feature  all three panes will be centred for this feature  to move left or right, use the horizontal scroll bars under each pane  to zoom, use the vertical scroll bars on the right",
            "title": "The Artemis interface"
        },
        {
            "location": "/modules/artemis/#what-next",
            "text": "Links to more information:  the Artemis manual.    Assemble a bacterial genome using Spades.",
            "title": "What next"
        },
        {
            "location": "/about/",
            "text": "About\n\n\nThe genomics tutorials were developed with funding from the \nThe Food and Health Flagship, an \nRDS-funded\n\nproject to provide cloud-based data services and tools\nfor Australian Life Science Researchers to combine, analyse and interpret\ngenomic, transcriptomic, proteomic and metabolomic data.  The data platform\nwill incorporate the \n\nBioplatforms Australia Antibiotic Resistant Pathogens Initiative (ABRPI)\n.\n\n\nAuthors\n\n\n Anna Syme\n\n\n Torsten Seemann\n\n\n Simon Gladman\n\n\n Dieter Bulach",
            "title": "About"
        },
        {
            "location": "/about/#about",
            "text": "The genomics tutorials were developed with funding from the \nThe Food and Health Flagship, an  RDS-funded \nproject to provide cloud-based data services and tools\nfor Australian Life Science Researchers to combine, analyse and interpret\ngenomic, transcriptomic, proteomic and metabolomic data.  The data platform\nwill incorporate the  Bioplatforms Australia Antibiotic Resistant Pathogens Initiative (ABRPI) .",
            "title": "About"
        },
        {
            "location": "/about/#authors",
            "text": "Anna Syme   Torsten Seemann   Simon Gladman   Dieter Bulach",
            "title": "Authors"
        }
    ]
}